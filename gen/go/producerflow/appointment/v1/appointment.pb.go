// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: producerflow/appointment/v1/appointment.proto

package appointmentv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Eligibility status of the appointment.
type EligibilityStatus int32

const (
	EligibilityStatus_ELIGIBILITY_STATUS_UNSPECIFIED EligibilityStatus = 0
	EligibilityStatus_ELIGIBILITY_STATUS_ELIGIBLE    EligibilityStatus = 1
	EligibilityStatus_ELIGIBILITY_STATUS_INELIGIBLE  EligibilityStatus = 2
)

// Enum value maps for EligibilityStatus.
var (
	EligibilityStatus_name = map[int32]string{
		0: "ELIGIBILITY_STATUS_UNSPECIFIED",
		1: "ELIGIBILITY_STATUS_ELIGIBLE",
		2: "ELIGIBILITY_STATUS_INELIGIBLE",
	}
	EligibilityStatus_value = map[string]int32{
		"ELIGIBILITY_STATUS_UNSPECIFIED": 0,
		"ELIGIBILITY_STATUS_ELIGIBLE":    1,
		"ELIGIBILITY_STATUS_INELIGIBLE":  2,
	}
)

func (x EligibilityStatus) Enum() *EligibilityStatus {
	p := new(EligibilityStatus)
	*p = x
	return p
}

func (x EligibilityStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EligibilityStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_producerflow_appointment_v1_appointment_proto_enumTypes[0].Descriptor()
}

func (EligibilityStatus) Type() protoreflect.EnumType {
	return &file_producerflow_appointment_v1_appointment_proto_enumTypes[0]
}

func (x EligibilityStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EligibilityStatus.Descriptor instead.
func (EligibilityStatus) EnumDescriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{0}
}

// Processing status of the appointment.
type ProcessingStatus int32

const (
	ProcessingStatus_PROCESSING_STATUS_UNSPECIFIED     ProcessingStatus = 0
	ProcessingStatus_PROCESSING_STATUS_IN_PROGRESS     ProcessingStatus = 1
	ProcessingStatus_PROCESSING_STATUS_APPOINTED       ProcessingStatus = 2
	ProcessingStatus_PROCESSING_STATUS_TERMINATED      ProcessingStatus = 3
	ProcessingStatus_PROCESSING_STATUS_REJECTED        ProcessingStatus = 4
	ProcessingStatus_PROCESSING_STATUS_MISSING_LICENSE ProcessingStatus = 5
)

// Enum value maps for ProcessingStatus.
var (
	ProcessingStatus_name = map[int32]string{
		0: "PROCESSING_STATUS_UNSPECIFIED",
		1: "PROCESSING_STATUS_IN_PROGRESS",
		2: "PROCESSING_STATUS_APPOINTED",
		3: "PROCESSING_STATUS_TERMINATED",
		4: "PROCESSING_STATUS_REJECTED",
		5: "PROCESSING_STATUS_MISSING_LICENSE",
	}
	ProcessingStatus_value = map[string]int32{
		"PROCESSING_STATUS_UNSPECIFIED":     0,
		"PROCESSING_STATUS_IN_PROGRESS":     1,
		"PROCESSING_STATUS_APPOINTED":       2,
		"PROCESSING_STATUS_TERMINATED":      3,
		"PROCESSING_STATUS_REJECTED":        4,
		"PROCESSING_STATUS_MISSING_LICENSE": 5,
	}
)

func (x ProcessingStatus) Enum() *ProcessingStatus {
	p := new(ProcessingStatus)
	*p = x
	return p
}

func (x ProcessingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_producerflow_appointment_v1_appointment_proto_enumTypes[1].Descriptor()
}

func (ProcessingStatus) Type() protoreflect.EnumType {
	return &file_producerflow_appointment_v1_appointment_proto_enumTypes[1]
}

func (x ProcessingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessingStatus.Descriptor instead.
func (ProcessingStatus) EnumDescriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{1}
}

// Type of appointment.
type AppointmentType int32

const (
	AppointmentType_APPOINTMENT_TYPE_UNSPECIFIED  AppointmentType = 0
	AppointmentType_APPOINTMENT_TYPE_REGISTRY     AppointmentType = 1
	AppointmentType_APPOINTMENT_TYPE_UP_FRONT     AppointmentType = 2
	AppointmentType_APPOINTMENT_TYPE_JUST_IN_TIME AppointmentType = 3
)

// Enum value maps for AppointmentType.
var (
	AppointmentType_name = map[int32]string{
		0: "APPOINTMENT_TYPE_UNSPECIFIED",
		1: "APPOINTMENT_TYPE_REGISTRY",
		2: "APPOINTMENT_TYPE_UP_FRONT",
		3: "APPOINTMENT_TYPE_JUST_IN_TIME",
	}
	AppointmentType_value = map[string]int32{
		"APPOINTMENT_TYPE_UNSPECIFIED":  0,
		"APPOINTMENT_TYPE_REGISTRY":     1,
		"APPOINTMENT_TYPE_UP_FRONT":     2,
		"APPOINTMENT_TYPE_JUST_IN_TIME": 3,
	}
)

func (x AppointmentType) Enum() *AppointmentType {
	p := new(AppointmentType)
	*p = x
	return p
}

func (x AppointmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppointmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_producerflow_appointment_v1_appointment_proto_enumTypes[2].Descriptor()
}

func (AppointmentType) Type() protoreflect.EnumType {
	return &file_producerflow_appointment_v1_appointment_proto_enumTypes[2]
}

func (x AppointmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppointmentType.Descriptor instead.
func (AppointmentType) EnumDescriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{2}
}

// Request to create a new appointment.
type RequestAppointmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. License number to appoint.
	LicenseNumber string `protobuf:"bytes,1,opt,name=license_number,json=licenseNumber,proto3" json:"license_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestAppointmentRequest) Reset() {
	*x = RequestAppointmentRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAppointmentRequest) ProtoMessage() {}

func (x *RequestAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAppointmentRequest.ProtoReflect.Descriptor instead.
func (*RequestAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{0}
}

func (x *RequestAppointmentRequest) GetLicenseNumber() string {
	if x != nil {
		return x.LicenseNumber
	}
	return ""
}

type RequestAppointmentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the created appointment.
	AppointmentId string `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	// Processing status of the appointment request.
	ProcessingStatus ProcessingStatus `protobuf:"varint,2,opt,name=processing_status,json=processingStatus,proto3,enum=producerflow.appointment.v1.ProcessingStatus" json:"processing_status,omitempty"`
	// If the appointment was rejected or ineligible, these reasons explain why.
	NotEligibleReasons []string `protobuf:"bytes,3,rep,name=not_eligible_reasons,json=notEligibleReasons,proto3" json:"not_eligible_reasons,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RequestAppointmentResponse) Reset() {
	*x = RequestAppointmentResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAppointmentResponse) ProtoMessage() {}

func (x *RequestAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAppointmentResponse.ProtoReflect.Descriptor instead.
func (*RequestAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{1}
}

func (x *RequestAppointmentResponse) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *RequestAppointmentResponse) GetProcessingStatus() ProcessingStatus {
	if x != nil {
		return x.ProcessingStatus
	}
	return ProcessingStatus_PROCESSING_STATUS_UNSPECIFIED
}

func (x *RequestAppointmentResponse) GetNotEligibleReasons() []string {
	if x != nil {
		return x.NotEligibleReasons
	}
	return nil
}

// Request to retrieve an appointment by ID.
type GetAppointmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the appointment to retrieve.
	AppointmentId string `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointmentRequest) Reset() {
	*x = GetAppointmentRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentRequest) ProtoMessage() {}

func (x *GetAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentRequest.ProtoReflect.Descriptor instead.
func (*GetAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{2}
}

func (x *GetAppointmentRequest) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

type GetAppointmentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The appointment details.
	Appointment   *Appointment `protobuf:"bytes,1,opt,name=appointment,proto3" json:"appointment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointmentResponse) Reset() {
	*x = GetAppointmentResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentResponse) ProtoMessage() {}

func (x *GetAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentResponse.ProtoReflect.Descriptor instead.
func (*GetAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{3}
}

func (x *GetAppointmentResponse) GetAppointment() *Appointment {
	if x != nil {
		return x.Appointment
	}
	return nil
}

// Request to list appointments, optionally filtered by processing status.
type ListAppointmentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Filter results by processing status.
	ProcessingStatus []ProcessingStatus `protobuf:"varint,1,rep,packed,name=processing_status,json=processingStatus,proto3,enum=producerflow.appointment.v1.ProcessingStatus" json:"processing_status,omitempty"`
	// Optional. Maximum number of results to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. Token for fetching the next page.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppointmentsRequest) Reset() {
	*x = ListAppointmentsRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppointmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppointmentsRequest) ProtoMessage() {}

func (x *ListAppointmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppointmentsRequest.ProtoReflect.Descriptor instead.
func (*ListAppointmentsRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{4}
}

func (x *ListAppointmentsRequest) GetProcessingStatus() []ProcessingStatus {
	if x != nil {
		return x.ProcessingStatus
	}
	return nil
}

func (x *ListAppointmentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAppointmentsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListAppointmentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of appointments.
	Appointments []*Appointment `protobuf:"bytes,1,rep,name=appointments,proto3" json:"appointments,omitempty"`
	// Token for fetching the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppointmentsResponse) Reset() {
	*x = ListAppointmentsResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppointmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppointmentsResponse) ProtoMessage() {}

func (x *ListAppointmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppointmentsResponse.ProtoReflect.Descriptor instead.
func (*ListAppointmentsResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{5}
}

func (x *ListAppointmentsResponse) GetAppointments() []*Appointment {
	if x != nil {
		return x.Appointments
	}
	return nil
}

func (x *ListAppointmentsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to terminate an appointment.
type TerminateAppointmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the appointment to terminate.
	AppointmentId string `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	// Required. Reason for termination.
	Reason        string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateAppointmentRequest) Reset() {
	*x = TerminateAppointmentRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateAppointmentRequest) ProtoMessage() {}

func (x *TerminateAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateAppointmentRequest.ProtoReflect.Descriptor instead.
func (*TerminateAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{6}
}

func (x *TerminateAppointmentRequest) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *TerminateAppointmentRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TerminateAppointmentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Indicates whether the termination was successful.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateAppointmentResponse) Reset() {
	*x = TerminateAppointmentResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateAppointmentResponse) ProtoMessage() {}

func (x *TerminateAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateAppointmentResponse.ProtoReflect.Descriptor instead.
func (*TerminateAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{7}
}

func (x *TerminateAppointmentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request to check appointment eligibility for a license.
type CheckAppointmentEligibilityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. License number to check.
	LicenseNumber string `protobuf:"bytes,1,opt,name=license_number,json=licenseNumber,proto3" json:"license_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckAppointmentEligibilityRequest) Reset() {
	*x = CheckAppointmentEligibilityRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckAppointmentEligibilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAppointmentEligibilityRequest) ProtoMessage() {}

func (x *CheckAppointmentEligibilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAppointmentEligibilityRequest.ProtoReflect.Descriptor instead.
func (*CheckAppointmentEligibilityRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{8}
}

func (x *CheckAppointmentEligibilityRequest) GetLicenseNumber() string {
	if x != nil {
		return x.LicenseNumber
	}
	return ""
}

type CheckAppointmentEligibilityResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If not eligible, reasons will be returned.
	NotEligibleReasons []string `protobuf:"bytes,1,rep,name=not_eligible_reasons,json=notEligibleReasons,proto3" json:"not_eligible_reasons,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CheckAppointmentEligibilityResponse) Reset() {
	*x = CheckAppointmentEligibilityResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckAppointmentEligibilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAppointmentEligibilityResponse) ProtoMessage() {}

func (x *CheckAppointmentEligibilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAppointmentEligibilityResponse.ProtoReflect.Descriptor instead.
func (*CheckAppointmentEligibilityResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{9}
}

func (x *CheckAppointmentEligibilityResponse) GetNotEligibleReasons() []string {
	if x != nil {
		return x.NotEligibleReasons
	}
	return nil
}

// Request to get appointment fees.
type GetAppointmentFeesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. License number to appoint.
	LicenseNumber string `protobuf:"bytes,1,opt,name=license_number,json=licenseNumber,proto3" json:"license_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointmentFeesRequest) Reset() {
	*x = GetAppointmentFeesRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointmentFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentFeesRequest) ProtoMessage() {}

func (x *GetAppointmentFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentFeesRequest.ProtoReflect.Descriptor instead.
func (*GetAppointmentFeesRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{10}
}

func (x *GetAppointmentFeesRequest) GetLicenseNumber() string {
	if x != nil {
		return x.LicenseNumber
	}
	return ""
}

type GetAppointmentFeesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total fee for the appointment in cents.
	FeeInCents    int64 `protobuf:"varint,1,opt,name=fee_in_cents,json=feeInCents,proto3" json:"fee_in_cents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointmentFeesResponse) Reset() {
	*x = GetAppointmentFeesResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointmentFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentFeesResponse) ProtoMessage() {}

func (x *GetAppointmentFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentFeesResponse.ProtoReflect.Descriptor instead.
func (*GetAppointmentFeesResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{11}
}

func (x *GetAppointmentFeesResponse) GetFeeInCents() int64 {
	if x != nil {
		return x.FeeInCents
	}
	return 0
}

// Request to get termination fees.
type GetTerminationFeesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Appointment ID.
	AppointmentId string `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTerminationFeesRequest) Reset() {
	*x = GetTerminationFeesRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTerminationFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTerminationFeesRequest) ProtoMessage() {}

func (x *GetTerminationFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTerminationFeesRequest.ProtoReflect.Descriptor instead.
func (*GetTerminationFeesRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{12}
}

func (x *GetTerminationFeesRequest) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

type GetTerminationFeesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total fee for the termination in cents.
	FeeInCents    int64 `protobuf:"varint,1,opt,name=fee_in_cents,json=feeInCents,proto3" json:"fee_in_cents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTerminationFeesResponse) Reset() {
	*x = GetTerminationFeesResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTerminationFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTerminationFeesResponse) ProtoMessage() {}

func (x *GetTerminationFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTerminationFeesResponse.ProtoReflect.Descriptor instead.
func (*GetTerminationFeesResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{13}
}

func (x *GetTerminationFeesResponse) GetFeeInCents() int64 {
	if x != nil {
		return x.FeeInCents
	}
	return 0
}

// Represents an appointment for a license.
type Appointment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the appointment.
	AppointmentId string `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	// The license number associated with the appointment.
	LicenseNumber string `protobuf:"bytes,2,opt,name=license_number,json=licenseNumber,proto3" json:"license_number,omitempty"`
	// Type of appointment (e.g., up-front, registry).
	AppointmentType AppointmentType `protobuf:"varint,3,opt,name=appointment_type,json=appointmentType,proto3,enum=producerflow.appointment.v1.AppointmentType" json:"appointment_type,omitempty"`
	// Eligibility status of the appointment (e.g., eligible, ineligible).
	EligibilityStatus EligibilityStatus `protobuf:"varint,4,opt,name=eligibility_status,json=eligibilityStatus,proto3,enum=producerflow.appointment.v1.EligibilityStatus" json:"eligibility_status,omitempty"`
	// Processing status of the appointment (e.g., in progress, appointed).
	ProcessingStatus ProcessingStatus `protobuf:"varint,5,opt,name=processing_status,json=processingStatus,proto3,enum=producerflow.appointment.v1.ProcessingStatus" json:"processing_status,omitempty"`
	// If ineligible or rejected, reasons will be listed here.
	NotEligibleReasons []string `protobuf:"bytes,6,rep,name=not_eligible_reasons,json=notEligibleReasons,proto3" json:"not_eligible_reasons,omitempty"`
	// Optional comments or notes related to the appointment.
	Comments string `protobuf:"bytes,7,opt,name=comments,proto3" json:"comments,omitempty"`
	// Total appointment fee in cents.
	AppointmentFeeInCents int64 `protobuf:"varint,8,opt,name=appointment_fee_in_cents,json=appointmentFeeInCents,proto3" json:"appointment_fee_in_cents,omitempty"`
	// Total termination fee in cents, if terminated or eligible for termination.
	TerminationFeeInCents int64 `protobuf:"varint,9,opt,name=termination_fee_in_cents,json=terminationFeeInCents,proto3" json:"termination_fee_in_cents,omitempty"`
	// Timestamp when the appointment was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp of the last update to the appointment.
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Appointment) Reset() {
	*x = Appointment{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Appointment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Appointment) ProtoMessage() {}

func (x *Appointment) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Appointment.ProtoReflect.Descriptor instead.
func (*Appointment) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{14}
}

func (x *Appointment) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *Appointment) GetLicenseNumber() string {
	if x != nil {
		return x.LicenseNumber
	}
	return ""
}

func (x *Appointment) GetAppointmentType() AppointmentType {
	if x != nil {
		return x.AppointmentType
	}
	return AppointmentType_APPOINTMENT_TYPE_UNSPECIFIED
}

func (x *Appointment) GetEligibilityStatus() EligibilityStatus {
	if x != nil {
		return x.EligibilityStatus
	}
	return EligibilityStatus_ELIGIBILITY_STATUS_UNSPECIFIED
}

func (x *Appointment) GetProcessingStatus() ProcessingStatus {
	if x != nil {
		return x.ProcessingStatus
	}
	return ProcessingStatus_PROCESSING_STATUS_UNSPECIFIED
}

func (x *Appointment) GetNotEligibleReasons() []string {
	if x != nil {
		return x.NotEligibleReasons
	}
	return nil
}

func (x *Appointment) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *Appointment) GetAppointmentFeeInCents() int64 {
	if x != nil {
		return x.AppointmentFeeInCents
	}
	return 0
}

func (x *Appointment) GetTerminationFeeInCents() int64 {
	if x != nil {
		return x.TerminationFeeInCents
	}
	return 0
}

func (x *Appointment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Appointment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_producerflow_appointment_v1_appointment_proto protoreflect.FileDescriptor

const file_producerflow_appointment_v1_appointment_proto_rawDesc = "" +
	"\n" +
	"-producerflow/appointment/v1/appointment.proto\x12\x1bproducerflow.appointment.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"K\n" +
	"\x19RequestAppointmentRequest\x12.\n" +
	"\x0elicense_number\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rlicenseNumber\"\xd1\x01\n" +
	"\x1aRequestAppointmentResponse\x12%\n" +
	"\x0eappointment_id\x18\x01 \x01(\tR\rappointmentId\x12Z\n" +
	"\x11processing_status\x18\x02 \x01(\x0e2-.producerflow.appointment.v1.ProcessingStatusR\x10processingStatus\x120\n" +
	"\x14not_eligible_reasons\x18\x03 \x03(\tR\x12notEligibleReasons\"G\n" +
	"\x15GetAppointmentRequest\x12.\n" +
	"\x0eappointment_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rappointmentId\"d\n" +
	"\x16GetAppointmentResponse\x12J\n" +
	"\vappointment\x18\x01 \x01(\v2(.producerflow.appointment.v1.AppointmentR\vappointment\"\xbc\x01\n" +
	"\x17ListAppointmentsRequest\x12Z\n" +
	"\x11processing_status\x18\x01 \x03(\x0e2-.producerflow.appointment.v1.ProcessingStatusR\x10processingStatus\x12&\n" +
	"\tpage_size\x18\x02 \x01(\x05B\t\xbaH\x06\x1a\x04\x18d(\x01R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x90\x01\n" +
	"\x18ListAppointmentsResponse\x12L\n" +
	"\fappointments\x18\x01 \x03(\v2(.producerflow.appointment.v1.AppointmentR\fappointments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"n\n" +
	"\x1bTerminateAppointmentRequest\x12.\n" +
	"\x0eappointment_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rappointmentId\x12\x1f\n" +
	"\x06reason\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x06reason\"8\n" +
	"\x1cTerminateAppointmentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"T\n" +
	"\"CheckAppointmentEligibilityRequest\x12.\n" +
	"\x0elicense_number\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rlicenseNumber\"W\n" +
	"#CheckAppointmentEligibilityResponse\x120\n" +
	"\x14not_eligible_reasons\x18\x01 \x03(\tR\x12notEligibleReasons\"K\n" +
	"\x19GetAppointmentFeesRequest\x12.\n" +
	"\x0elicense_number\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rlicenseNumber\">\n" +
	"\x1aGetAppointmentFeesResponse\x12 \n" +
	"\ffee_in_cents\x18\x01 \x01(\x03R\n" +
	"feeInCents\"K\n" +
	"\x19GetTerminationFeesRequest\x12.\n" +
	"\x0eappointment_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rappointmentId\">\n" +
	"\x1aGetTerminationFeesResponse\x12 \n" +
	"\ffee_in_cents\x18\x01 \x01(\x03R\n" +
	"feeInCents\"\xa5\x05\n" +
	"\vAppointment\x12%\n" +
	"\x0eappointment_id\x18\x01 \x01(\tR\rappointmentId\x12%\n" +
	"\x0elicense_number\x18\x02 \x01(\tR\rlicenseNumber\x12W\n" +
	"\x10appointment_type\x18\x03 \x01(\x0e2,.producerflow.appointment.v1.AppointmentTypeR\x0fappointmentType\x12]\n" +
	"\x12eligibility_status\x18\x04 \x01(\x0e2..producerflow.appointment.v1.EligibilityStatusR\x11eligibilityStatus\x12Z\n" +
	"\x11processing_status\x18\x05 \x01(\x0e2-.producerflow.appointment.v1.ProcessingStatusR\x10processingStatus\x120\n" +
	"\x14not_eligible_reasons\x18\x06 \x03(\tR\x12notEligibleReasons\x12\x1a\n" +
	"\bcomments\x18\a \x01(\tR\bcomments\x127\n" +
	"\x18appointment_fee_in_cents\x18\b \x01(\x03R\x15appointmentFeeInCents\x127\n" +
	"\x18termination_fee_in_cents\x18\t \x01(\x03R\x15terminationFeeInCents\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt*{\n" +
	"\x11EligibilityStatus\x12\"\n" +
	"\x1eELIGIBILITY_STATUS_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bELIGIBILITY_STATUS_ELIGIBLE\x10\x01\x12!\n" +
	"\x1dELIGIBILITY_STATUS_INELIGIBLE\x10\x02*\xe2\x01\n" +
	"\x10ProcessingStatus\x12!\n" +
	"\x1dPROCESSING_STATUS_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dPROCESSING_STATUS_IN_PROGRESS\x10\x01\x12\x1f\n" +
	"\x1bPROCESSING_STATUS_APPOINTED\x10\x02\x12 \n" +
	"\x1cPROCESSING_STATUS_TERMINATED\x10\x03\x12\x1e\n" +
	"\x1aPROCESSING_STATUS_REJECTED\x10\x04\x12%\n" +
	"!PROCESSING_STATUS_MISSING_LICENSE\x10\x05*\x94\x01\n" +
	"\x0fAppointmentType\x12 \n" +
	"\x1cAPPOINTMENT_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19APPOINTMENT_TYPE_REGISTRY\x10\x01\x12\x1d\n" +
	"\x19APPOINTMENT_TYPE_UP_FRONT\x10\x02\x12!\n" +
	"\x1dAPPOINTMENT_TYPE_JUST_IN_TIME\x10\x032\xd9\a\n" +
	"\x12AppointmentService\x12\x85\x01\n" +
	"\x12RequestAppointment\x126.producerflow.appointment.v1.RequestAppointmentRequest\x1a7.producerflow.appointment.v1.RequestAppointmentResponse\x12y\n" +
	"\x0eGetAppointment\x122.producerflow.appointment.v1.GetAppointmentRequest\x1a3.producerflow.appointment.v1.GetAppointmentResponse\x12\x7f\n" +
	"\x10ListAppointments\x124.producerflow.appointment.v1.ListAppointmentsRequest\x1a5.producerflow.appointment.v1.ListAppointmentsResponse\x12\x8b\x01\n" +
	"\x14TerminateAppointment\x128.producerflow.appointment.v1.TerminateAppointmentRequest\x1a9.producerflow.appointment.v1.TerminateAppointmentResponse\x12\xa0\x01\n" +
	"\x1bCheckAppointmentEligibility\x12?.producerflow.appointment.v1.CheckAppointmentEligibilityRequest\x1a@.producerflow.appointment.v1.CheckAppointmentEligibilityResponse\x12\x85\x01\n" +
	"\x12GetAppointmentFees\x126.producerflow.appointment.v1.GetAppointmentFeesRequest\x1a7.producerflow.appointment.v1.GetAppointmentFeesResponse\x12\x85\x01\n" +
	"\x12GetTerminationFees\x126.producerflow.appointment.v1.GetTerminationFeesRequest\x1a7.producerflow.appointment.v1.GetTerminationFeesResponseB\x97\x02\n" +
	"\x1fcom.producerflow.appointment.v1B\x10AppointmentProtoP\x01ZTgithub.com/agentero/producerflowapi/gen/go/producerflow/appointment/v1;appointmentv1\xa2\x02\x03PAX\xaa\x02\x1bProducerflow.Appointment.V1\xca\x02\x1bProducerflow\\Appointment\\V1\xe2\x02'Producerflow\\Appointment\\V1\\GPBMetadata\xea\x02\x1dProducerflow::Appointment::V1b\x06proto3"

var (
	file_producerflow_appointment_v1_appointment_proto_rawDescOnce sync.Once
	file_producerflow_appointment_v1_appointment_proto_rawDescData []byte
)

func file_producerflow_appointment_v1_appointment_proto_rawDescGZIP() []byte {
	file_producerflow_appointment_v1_appointment_proto_rawDescOnce.Do(func() {
		file_producerflow_appointment_v1_appointment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_producerflow_appointment_v1_appointment_proto_rawDesc), len(file_producerflow_appointment_v1_appointment_proto_rawDesc)))
	})
	return file_producerflow_appointment_v1_appointment_proto_rawDescData
}

var file_producerflow_appointment_v1_appointment_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_producerflow_appointment_v1_appointment_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_producerflow_appointment_v1_appointment_proto_goTypes = []any{
	(EligibilityStatus)(0),                      // 0: producerflow.appointment.v1.EligibilityStatus
	(ProcessingStatus)(0),                       // 1: producerflow.appointment.v1.ProcessingStatus
	(AppointmentType)(0),                        // 2: producerflow.appointment.v1.AppointmentType
	(*RequestAppointmentRequest)(nil),           // 3: producerflow.appointment.v1.RequestAppointmentRequest
	(*RequestAppointmentResponse)(nil),          // 4: producerflow.appointment.v1.RequestAppointmentResponse
	(*GetAppointmentRequest)(nil),               // 5: producerflow.appointment.v1.GetAppointmentRequest
	(*GetAppointmentResponse)(nil),              // 6: producerflow.appointment.v1.GetAppointmentResponse
	(*ListAppointmentsRequest)(nil),             // 7: producerflow.appointment.v1.ListAppointmentsRequest
	(*ListAppointmentsResponse)(nil),            // 8: producerflow.appointment.v1.ListAppointmentsResponse
	(*TerminateAppointmentRequest)(nil),         // 9: producerflow.appointment.v1.TerminateAppointmentRequest
	(*TerminateAppointmentResponse)(nil),        // 10: producerflow.appointment.v1.TerminateAppointmentResponse
	(*CheckAppointmentEligibilityRequest)(nil),  // 11: producerflow.appointment.v1.CheckAppointmentEligibilityRequest
	(*CheckAppointmentEligibilityResponse)(nil), // 12: producerflow.appointment.v1.CheckAppointmentEligibilityResponse
	(*GetAppointmentFeesRequest)(nil),           // 13: producerflow.appointment.v1.GetAppointmentFeesRequest
	(*GetAppointmentFeesResponse)(nil),          // 14: producerflow.appointment.v1.GetAppointmentFeesResponse
	(*GetTerminationFeesRequest)(nil),           // 15: producerflow.appointment.v1.GetTerminationFeesRequest
	(*GetTerminationFeesResponse)(nil),          // 16: producerflow.appointment.v1.GetTerminationFeesResponse
	(*Appointment)(nil),                         // 17: producerflow.appointment.v1.Appointment
	(*timestamppb.Timestamp)(nil),               // 18: google.protobuf.Timestamp
}
var file_producerflow_appointment_v1_appointment_proto_depIdxs = []int32{
	1,  // 0: producerflow.appointment.v1.RequestAppointmentResponse.processing_status:type_name -> producerflow.appointment.v1.ProcessingStatus
	17, // 1: producerflow.appointment.v1.GetAppointmentResponse.appointment:type_name -> producerflow.appointment.v1.Appointment
	1,  // 2: producerflow.appointment.v1.ListAppointmentsRequest.processing_status:type_name -> producerflow.appointment.v1.ProcessingStatus
	17, // 3: producerflow.appointment.v1.ListAppointmentsResponse.appointments:type_name -> producerflow.appointment.v1.Appointment
	2,  // 4: producerflow.appointment.v1.Appointment.appointment_type:type_name -> producerflow.appointment.v1.AppointmentType
	0,  // 5: producerflow.appointment.v1.Appointment.eligibility_status:type_name -> producerflow.appointment.v1.EligibilityStatus
	1,  // 6: producerflow.appointment.v1.Appointment.processing_status:type_name -> producerflow.appointment.v1.ProcessingStatus
	18, // 7: producerflow.appointment.v1.Appointment.created_at:type_name -> google.protobuf.Timestamp
	18, // 8: producerflow.appointment.v1.Appointment.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 9: producerflow.appointment.v1.AppointmentService.RequestAppointment:input_type -> producerflow.appointment.v1.RequestAppointmentRequest
	5,  // 10: producerflow.appointment.v1.AppointmentService.GetAppointment:input_type -> producerflow.appointment.v1.GetAppointmentRequest
	7,  // 11: producerflow.appointment.v1.AppointmentService.ListAppointments:input_type -> producerflow.appointment.v1.ListAppointmentsRequest
	9,  // 12: producerflow.appointment.v1.AppointmentService.TerminateAppointment:input_type -> producerflow.appointment.v1.TerminateAppointmentRequest
	11, // 13: producerflow.appointment.v1.AppointmentService.CheckAppointmentEligibility:input_type -> producerflow.appointment.v1.CheckAppointmentEligibilityRequest
	13, // 14: producerflow.appointment.v1.AppointmentService.GetAppointmentFees:input_type -> producerflow.appointment.v1.GetAppointmentFeesRequest
	15, // 15: producerflow.appointment.v1.AppointmentService.GetTerminationFees:input_type -> producerflow.appointment.v1.GetTerminationFeesRequest
	4,  // 16: producerflow.appointment.v1.AppointmentService.RequestAppointment:output_type -> producerflow.appointment.v1.RequestAppointmentResponse
	6,  // 17: producerflow.appointment.v1.AppointmentService.GetAppointment:output_type -> producerflow.appointment.v1.GetAppointmentResponse
	8,  // 18: producerflow.appointment.v1.AppointmentService.ListAppointments:output_type -> producerflow.appointment.v1.ListAppointmentsResponse
	10, // 19: producerflow.appointment.v1.AppointmentService.TerminateAppointment:output_type -> producerflow.appointment.v1.TerminateAppointmentResponse
	12, // 20: producerflow.appointment.v1.AppointmentService.CheckAppointmentEligibility:output_type -> producerflow.appointment.v1.CheckAppointmentEligibilityResponse
	14, // 21: producerflow.appointment.v1.AppointmentService.GetAppointmentFees:output_type -> producerflow.appointment.v1.GetAppointmentFeesResponse
	16, // 22: producerflow.appointment.v1.AppointmentService.GetTerminationFees:output_type -> producerflow.appointment.v1.GetTerminationFeesResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_producerflow_appointment_v1_appointment_proto_init() }
func file_producerflow_appointment_v1_appointment_proto_init() {
	if File_producerflow_appointment_v1_appointment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_producerflow_appointment_v1_appointment_proto_rawDesc), len(file_producerflow_appointment_v1_appointment_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_producerflow_appointment_v1_appointment_proto_goTypes,
		DependencyIndexes: file_producerflow_appointment_v1_appointment_proto_depIdxs,
		EnumInfos:         file_producerflow_appointment_v1_appointment_proto_enumTypes,
		MessageInfos:      file_producerflow_appointment_v1_appointment_proto_msgTypes,
	}.Build()
	File_producerflow_appointment_v1_appointment_proto = out.File
	file_producerflow_appointment_v1_appointment_proto_goTypes = nil
	file_producerflow_appointment_v1_appointment_proto_depIdxs = nil
}
