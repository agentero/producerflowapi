// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: producerflow/appointment/v1/appointment.proto

package appointmentv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Processing status of the appointment.
type ProcessingStatus int32

const (
	ProcessingStatus_PROCESSING_STATUS_UNSPECIFIED     ProcessingStatus = 0
	ProcessingStatus_PROCESSING_STATUS_IN_PROGRESS     ProcessingStatus = 1
	ProcessingStatus_PROCESSING_STATUS_APPOINTED       ProcessingStatus = 2
	ProcessingStatus_PROCESSING_STATUS_TERMINATED      ProcessingStatus = 3
	ProcessingStatus_PROCESSING_STATUS_REJECTED        ProcessingStatus = 4
	ProcessingStatus_PROCESSING_STATUS_MISSING_LICENSE ProcessingStatus = 5
)

// Enum value maps for ProcessingStatus.
var (
	ProcessingStatus_name = map[int32]string{
		0: "PROCESSING_STATUS_UNSPECIFIED",
		1: "PROCESSING_STATUS_IN_PROGRESS",
		2: "PROCESSING_STATUS_APPOINTED",
		3: "PROCESSING_STATUS_TERMINATED",
		4: "PROCESSING_STATUS_REJECTED",
		5: "PROCESSING_STATUS_MISSING_LICENSE",
	}
	ProcessingStatus_value = map[string]int32{
		"PROCESSING_STATUS_UNSPECIFIED":     0,
		"PROCESSING_STATUS_IN_PROGRESS":     1,
		"PROCESSING_STATUS_APPOINTED":       2,
		"PROCESSING_STATUS_TERMINATED":      3,
		"PROCESSING_STATUS_REJECTED":        4,
		"PROCESSING_STATUS_MISSING_LICENSE": 5,
	}
)

func (x ProcessingStatus) Enum() *ProcessingStatus {
	p := new(ProcessingStatus)
	*p = x
	return p
}

func (x ProcessingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_producerflow_appointment_v1_appointment_proto_enumTypes[0].Descriptor()
}

func (ProcessingStatus) Type() protoreflect.EnumType {
	return &file_producerflow_appointment_v1_appointment_proto_enumTypes[0]
}

func (x ProcessingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessingStatus.Descriptor instead.
func (ProcessingStatus) EnumDescriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{0}
}

// Type of appointment.
type AppointmentType int32

const (
	AppointmentType_APPOINTMENT_TYPE_UNSPECIFIED  AppointmentType = 0
	AppointmentType_APPOINTMENT_TYPE_REGISTRY     AppointmentType = 1
	AppointmentType_APPOINTMENT_TYPE_UP_FRONT     AppointmentType = 2
	AppointmentType_APPOINTMENT_TYPE_JUST_IN_TIME AppointmentType = 3
)

// Enum value maps for AppointmentType.
var (
	AppointmentType_name = map[int32]string{
		0: "APPOINTMENT_TYPE_UNSPECIFIED",
		1: "APPOINTMENT_TYPE_REGISTRY",
		2: "APPOINTMENT_TYPE_UP_FRONT",
		3: "APPOINTMENT_TYPE_JUST_IN_TIME",
	}
	AppointmentType_value = map[string]int32{
		"APPOINTMENT_TYPE_UNSPECIFIED":  0,
		"APPOINTMENT_TYPE_REGISTRY":     1,
		"APPOINTMENT_TYPE_UP_FRONT":     2,
		"APPOINTMENT_TYPE_JUST_IN_TIME": 3,
	}
)

func (x AppointmentType) Enum() *AppointmentType {
	p := new(AppointmentType)
	*p = x
	return p
}

func (x AppointmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppointmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_producerflow_appointment_v1_appointment_proto_enumTypes[1].Descriptor()
}

func (AppointmentType) Type() protoreflect.EnumType {
	return &file_producerflow_appointment_v1_appointment_proto_enumTypes[1]
}

func (x AppointmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppointmentType.Descriptor instead.
func (AppointmentType) EnumDescriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{1}
}

// TerminationReason represents the reason for the termination of an appointment.
// These reasons correspond to NIPR's valid termination codes and vary by state.
// Use ListTerminationReasons to get the valid reasons for a specific state
// before terminating an appointment.
//
// Reference: https://pdb.nipr.com/Gateway/ValidTerms
type TerminationReason int32

const (
	TerminationReason_TERMINATION_REASON_UNSPECIFIED                    TerminationReason = 0
	TerminationReason_TERMINATION_REASON_VOLUNTARY_TERMINATION          TerminationReason = 1
	TerminationReason_TERMINATION_REASON_INADEQUATE_PRODUCTION          TerminationReason = 2
	TerminationReason_TERMINATION_REASON_CANCELLED_BY_GENERAL_AGENT     TerminationReason = 3
	TerminationReason_TERMINATION_REASON_DEATH                          TerminationReason = 4
	TerminationReason_TERMINATION_REASON_COMPANY_DEFUNCT_OR_LIQUIDATION TerminationReason = 5
	TerminationReason_TERMINATION_REASON_COMPANY_INDEBTEDNESS           TerminationReason = 6
	TerminationReason_TERMINATION_REASON_POOR_POLICYHOLDER_SERVICE      TerminationReason = 7
	TerminationReason_TERMINATION_REASON_AGENT_MOVED                    TerminationReason = 8
	TerminationReason_TERMINATION_REASON_APPOINTED_IN_ERROR             TerminationReason = 9
	TerminationReason_TERMINATION_REASON_CANCELLED                      TerminationReason = 10
	TerminationReason_TERMINATION_REASON_CANCELLED_FOR_CAUSE            TerminationReason = 11
	TerminationReason_TERMINATION_REASON_COMPANY_MERGER                 TerminationReason = 12
	TerminationReason_TERMINATION_REASON_REVOKED                        TerminationReason = 13
	TerminationReason_TERMINATION_REASON_SUSPENDED_FOR_COMPLIANCE       TerminationReason = 14
	TerminationReason_TERMINATION_REASON_REQUEST_REGULATORY_REVIEW      TerminationReason = 15
)

// Enum value maps for TerminationReason.
var (
	TerminationReason_name = map[int32]string{
		0:  "TERMINATION_REASON_UNSPECIFIED",
		1:  "TERMINATION_REASON_VOLUNTARY_TERMINATION",
		2:  "TERMINATION_REASON_INADEQUATE_PRODUCTION",
		3:  "TERMINATION_REASON_CANCELLED_BY_GENERAL_AGENT",
		4:  "TERMINATION_REASON_DEATH",
		5:  "TERMINATION_REASON_COMPANY_DEFUNCT_OR_LIQUIDATION",
		6:  "TERMINATION_REASON_COMPANY_INDEBTEDNESS",
		7:  "TERMINATION_REASON_POOR_POLICYHOLDER_SERVICE",
		8:  "TERMINATION_REASON_AGENT_MOVED",
		9:  "TERMINATION_REASON_APPOINTED_IN_ERROR",
		10: "TERMINATION_REASON_CANCELLED",
		11: "TERMINATION_REASON_CANCELLED_FOR_CAUSE",
		12: "TERMINATION_REASON_COMPANY_MERGER",
		13: "TERMINATION_REASON_REVOKED",
		14: "TERMINATION_REASON_SUSPENDED_FOR_COMPLIANCE",
		15: "TERMINATION_REASON_REQUEST_REGULATORY_REVIEW",
	}
	TerminationReason_value = map[string]int32{
		"TERMINATION_REASON_UNSPECIFIED":                    0,
		"TERMINATION_REASON_VOLUNTARY_TERMINATION":          1,
		"TERMINATION_REASON_INADEQUATE_PRODUCTION":          2,
		"TERMINATION_REASON_CANCELLED_BY_GENERAL_AGENT":     3,
		"TERMINATION_REASON_DEATH":                          4,
		"TERMINATION_REASON_COMPANY_DEFUNCT_OR_LIQUIDATION": 5,
		"TERMINATION_REASON_COMPANY_INDEBTEDNESS":           6,
		"TERMINATION_REASON_POOR_POLICYHOLDER_SERVICE":      7,
		"TERMINATION_REASON_AGENT_MOVED":                    8,
		"TERMINATION_REASON_APPOINTED_IN_ERROR":             9,
		"TERMINATION_REASON_CANCELLED":                      10,
		"TERMINATION_REASON_CANCELLED_FOR_CAUSE":            11,
		"TERMINATION_REASON_COMPANY_MERGER":                 12,
		"TERMINATION_REASON_REVOKED":                        13,
		"TERMINATION_REASON_SUSPENDED_FOR_COMPLIANCE":       14,
		"TERMINATION_REASON_REQUEST_REGULATORY_REVIEW":      15,
	}
)

func (x TerminationReason) Enum() *TerminationReason {
	p := new(TerminationReason)
	*p = x
	return p
}

func (x TerminationReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TerminationReason) Descriptor() protoreflect.EnumDescriptor {
	return file_producerflow_appointment_v1_appointment_proto_enumTypes[2].Descriptor()
}

func (TerminationReason) Type() protoreflect.EnumType {
	return &file_producerflow_appointment_v1_appointment_proto_enumTypes[2]
}

func (x TerminationReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TerminationReason.Descriptor instead.
func (TerminationReason) EnumDescriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{2}
}

// Request to create a new appointment.
type RequestAppointmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the license to appoint.
	LicenseId string `protobuf:"bytes,1,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	// Required. The ID of the carrier to appoint the license with.
	CarrierId     string `protobuf:"bytes,2,opt,name=carrier_id,json=carrierId,proto3" json:"carrier_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestAppointmentRequest) Reset() {
	*x = RequestAppointmentRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAppointmentRequest) ProtoMessage() {}

func (x *RequestAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAppointmentRequest.ProtoReflect.Descriptor instead.
func (*RequestAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{0}
}

func (x *RequestAppointmentRequest) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

func (x *RequestAppointmentRequest) GetCarrierId() string {
	if x != nil {
		return x.CarrierId
	}
	return ""
}

type RequestAppointmentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the created appointment.
	AppointmentId string `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	// Processing status of the appointment request.
	ProcessingStatus ProcessingStatus `protobuf:"varint,2,opt,name=processing_status,json=processingStatus,proto3,enum=producerflow.appointment.v1.ProcessingStatus" json:"processing_status,omitempty"`
	// If the appointment was rejected or ineligible, these reasons explain why.
	NotEligibleReasons []string `protobuf:"bytes,3,rep,name=not_eligible_reasons,json=notEligibleReasons,proto3" json:"not_eligible_reasons,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RequestAppointmentResponse) Reset() {
	*x = RequestAppointmentResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAppointmentResponse) ProtoMessage() {}

func (x *RequestAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAppointmentResponse.ProtoReflect.Descriptor instead.
func (*RequestAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{1}
}

func (x *RequestAppointmentResponse) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *RequestAppointmentResponse) GetProcessingStatus() ProcessingStatus {
	if x != nil {
		return x.ProcessingStatus
	}
	return ProcessingStatus_PROCESSING_STATUS_UNSPECIFIED
}

func (x *RequestAppointmentResponse) GetNotEligibleReasons() []string {
	if x != nil {
		return x.NotEligibleReasons
	}
	return nil
}

// Request to retrieve an appointment by ID.
type GetAppointmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the appointment to retrieve.
	AppointmentId string `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointmentRequest) Reset() {
	*x = GetAppointmentRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentRequest) ProtoMessage() {}

func (x *GetAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentRequest.ProtoReflect.Descriptor instead.
func (*GetAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{2}
}

func (x *GetAppointmentRequest) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

type GetAppointmentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The appointment details.
	Appointment   *Appointment `protobuf:"bytes,1,opt,name=appointment,proto3" json:"appointment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointmentResponse) Reset() {
	*x = GetAppointmentResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentResponse) ProtoMessage() {}

func (x *GetAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentResponse.ProtoReflect.Descriptor instead.
func (*GetAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{3}
}

func (x *GetAppointmentResponse) GetAppointment() *Appointment {
	if x != nil {
		return x.Appointment
	}
	return nil
}

// Request to list appointments, optionally filtered by processing status.
type ListAppointmentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Filter results by processing status.
	ProcessingStatus []ProcessingStatus `protobuf:"varint,1,rep,packed,name=processing_status,json=processingStatus,proto3,enum=producerflow.appointment.v1.ProcessingStatus" json:"processing_status,omitempty"`
	// Optional. Filter results by license owner.
	//
	// Types that are valid to be assigned to LicenseOwner:
	//
	//	*ListAppointmentsRequest_ProducerId
	//	*ListAppointmentsRequest_AgencyId
	LicenseOwner  isListAppointmentsRequest_LicenseOwner `protobuf_oneof:"license_owner"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppointmentsRequest) Reset() {
	*x = ListAppointmentsRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppointmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppointmentsRequest) ProtoMessage() {}

func (x *ListAppointmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppointmentsRequest.ProtoReflect.Descriptor instead.
func (*ListAppointmentsRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{4}
}

func (x *ListAppointmentsRequest) GetProcessingStatus() []ProcessingStatus {
	if x != nil {
		return x.ProcessingStatus
	}
	return nil
}

func (x *ListAppointmentsRequest) GetLicenseOwner() isListAppointmentsRequest_LicenseOwner {
	if x != nil {
		return x.LicenseOwner
	}
	return nil
}

func (x *ListAppointmentsRequest) GetProducerId() string {
	if x != nil {
		if x, ok := x.LicenseOwner.(*ListAppointmentsRequest_ProducerId); ok {
			return x.ProducerId
		}
	}
	return ""
}

func (x *ListAppointmentsRequest) GetAgencyId() string {
	if x != nil {
		if x, ok := x.LicenseOwner.(*ListAppointmentsRequest_AgencyId); ok {
			return x.AgencyId
		}
	}
	return ""
}

type isListAppointmentsRequest_LicenseOwner interface {
	isListAppointmentsRequest_LicenseOwner()
}

type ListAppointmentsRequest_ProducerId struct {
	ProducerId string `protobuf:"bytes,2,opt,name=producer_id,json=producerId,proto3,oneof"`
}

type ListAppointmentsRequest_AgencyId struct {
	AgencyId string `protobuf:"bytes,3,opt,name=agency_id,json=agencyId,proto3,oneof"`
}

func (*ListAppointmentsRequest_ProducerId) isListAppointmentsRequest_LicenseOwner() {}

func (*ListAppointmentsRequest_AgencyId) isListAppointmentsRequest_LicenseOwner() {}

type ListAppointmentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of appointments.
	Appointments []*Appointment `protobuf:"bytes,1,rep,name=appointments,proto3" json:"appointments,omitempty"`
	// Token for fetching the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppointmentsResponse) Reset() {
	*x = ListAppointmentsResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppointmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppointmentsResponse) ProtoMessage() {}

func (x *ListAppointmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppointmentsResponse.ProtoReflect.Descriptor instead.
func (*ListAppointmentsResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{5}
}

func (x *ListAppointmentsResponse) GetAppointments() []*Appointment {
	if x != nil {
		return x.Appointments
	}
	return nil
}

func (x *ListAppointmentsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to terminate an appointment.
type TerminateAppointmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the appointment to terminate.
	AppointmentId string `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	// Reason for termination. This must be a valid termination reason
	// for the state where the license is issued. Call ListTerminationReasons
	// first to get the list of valid reasons for the specific state.
	Reason        TerminationReason `protobuf:"varint,2,opt,name=reason,proto3,enum=producerflow.appointment.v1.TerminationReason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateAppointmentRequest) Reset() {
	*x = TerminateAppointmentRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateAppointmentRequest) ProtoMessage() {}

func (x *TerminateAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateAppointmentRequest.ProtoReflect.Descriptor instead.
func (*TerminateAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{6}
}

func (x *TerminateAppointmentRequest) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *TerminateAppointmentRequest) GetReason() TerminationReason {
	if x != nil {
		return x.Reason
	}
	return TerminationReason_TERMINATION_REASON_UNSPECIFIED
}

type TerminateAppointmentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Indicates whether the termination request was successfully submitted to NIPR.
	// This does not indicate that the appointment has been terminated, only that
	// the request has been accepted for processing. The actual termination will
	// be processed asynchronously by NIPR, and you will be notified via webhook
	// when the process completes.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateAppointmentResponse) Reset() {
	*x = TerminateAppointmentResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateAppointmentResponse) ProtoMessage() {}

func (x *TerminateAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateAppointmentResponse.ProtoReflect.Descriptor instead.
func (*TerminateAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{7}
}

func (x *TerminateAppointmentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request to retrieve a list of licenses that are eligible to be appointed.
type ListEligibleLicensesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The applicant is the producer or agency with licenses eligible to be appointed.
	//
	// Types that are valid to be assigned to Applicant:
	//
	//	*ListEligibleLicensesRequest_ProducerId
	//	*ListEligibleLicensesRequest_AgencyId
	Applicant     isListEligibleLicensesRequest_Applicant `protobuf_oneof:"applicant"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEligibleLicensesRequest) Reset() {
	*x = ListEligibleLicensesRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEligibleLicensesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEligibleLicensesRequest) ProtoMessage() {}

func (x *ListEligibleLicensesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEligibleLicensesRequest.ProtoReflect.Descriptor instead.
func (*ListEligibleLicensesRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{8}
}

func (x *ListEligibleLicensesRequest) GetApplicant() isListEligibleLicensesRequest_Applicant {
	if x != nil {
		return x.Applicant
	}
	return nil
}

func (x *ListEligibleLicensesRequest) GetProducerId() string {
	if x != nil {
		if x, ok := x.Applicant.(*ListEligibleLicensesRequest_ProducerId); ok {
			return x.ProducerId
		}
	}
	return ""
}

func (x *ListEligibleLicensesRequest) GetAgencyId() string {
	if x != nil {
		if x, ok := x.Applicant.(*ListEligibleLicensesRequest_AgencyId); ok {
			return x.AgencyId
		}
	}
	return ""
}

type isListEligibleLicensesRequest_Applicant interface {
	isListEligibleLicensesRequest_Applicant()
}

type ListEligibleLicensesRequest_ProducerId struct {
	ProducerId string `protobuf:"bytes,1,opt,name=producer_id,json=producerId,proto3,oneof"`
}

type ListEligibleLicensesRequest_AgencyId struct {
	AgencyId string `protobuf:"bytes,2,opt,name=agency_id,json=agencyId,proto3,oneof"`
}

func (*ListEligibleLicensesRequest_ProducerId) isListEligibleLicensesRequest_Applicant() {}

func (*ListEligibleLicensesRequest_AgencyId) isListEligibleLicensesRequest_Applicant() {}

type ListEligibleLicensesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of licenses that are eligible to be appointed.
	Licenses      []*License `protobuf:"bytes,1,rep,name=licenses,proto3" json:"licenses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEligibleLicensesResponse) Reset() {
	*x = ListEligibleLicensesResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEligibleLicensesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEligibleLicensesResponse) ProtoMessage() {}

func (x *ListEligibleLicensesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEligibleLicensesResponse.ProtoReflect.Descriptor instead.
func (*ListEligibleLicensesResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{9}
}

func (x *ListEligibleLicensesResponse) GetLicenses() []*License {
	if x != nil {
		return x.Licenses
	}
	return nil
}

// Request to get appointment fees.
type GetAppointmentFeesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the license to get the appointment fee for.
	LicenseId     string `protobuf:"bytes,1,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointmentFeesRequest) Reset() {
	*x = GetAppointmentFeesRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointmentFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentFeesRequest) ProtoMessage() {}

func (x *GetAppointmentFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentFeesRequest.ProtoReflect.Descriptor instead.
func (*GetAppointmentFeesRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{10}
}

func (x *GetAppointmentFeesRequest) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

type GetAppointmentFeesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total fee for the appointment in cents.
	FeeInCents    int64 `protobuf:"varint,1,opt,name=fee_in_cents,json=feeInCents,proto3" json:"fee_in_cents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointmentFeesResponse) Reset() {
	*x = GetAppointmentFeesResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointmentFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentFeesResponse) ProtoMessage() {}

func (x *GetAppointmentFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentFeesResponse.ProtoReflect.Descriptor instead.
func (*GetAppointmentFeesResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{11}
}

func (x *GetAppointmentFeesResponse) GetFeeInCents() int64 {
	if x != nil {
		return x.FeeInCents
	}
	return 0
}

// Request to get termination fees.
type GetTerminationFeesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the license to get the termination fee for.
	LicenseId     string `protobuf:"bytes,1,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTerminationFeesRequest) Reset() {
	*x = GetTerminationFeesRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTerminationFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTerminationFeesRequest) ProtoMessage() {}

func (x *GetTerminationFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTerminationFeesRequest.ProtoReflect.Descriptor instead.
func (*GetTerminationFeesRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{12}
}

func (x *GetTerminationFeesRequest) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

type GetTerminationFeesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total fee for the termination in cents.
	FeeInCents    int64 `protobuf:"varint,1,opt,name=fee_in_cents,json=feeInCents,proto3" json:"fee_in_cents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTerminationFeesResponse) Reset() {
	*x = GetTerminationFeesResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTerminationFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTerminationFeesResponse) ProtoMessage() {}

func (x *GetTerminationFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTerminationFeesResponse.ProtoReflect.Descriptor instead.
func (*GetTerminationFeesResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{13}
}

func (x *GetTerminationFeesResponse) GetFeeInCents() int64 {
	if x != nil {
		return x.FeeInCents
	}
	return 0
}

type GetAppointableCarriersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointableCarriersRequest) Reset() {
	*x = GetAppointableCarriersRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointableCarriersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointableCarriersRequest) ProtoMessage() {}

func (x *GetAppointableCarriersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointableCarriersRequest.ProtoReflect.Descriptor instead.
func (*GetAppointableCarriersRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{14}
}

type GetAppointableCarriersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of carriers that are available to be appointed.
	Carriers      []*Carrier `protobuf:"bytes,1,rep,name=carriers,proto3" json:"carriers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointableCarriersResponse) Reset() {
	*x = GetAppointableCarriersResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointableCarriersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointableCarriersResponse) ProtoMessage() {}

func (x *GetAppointableCarriersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointableCarriersResponse.ProtoReflect.Descriptor instead.
func (*GetAppointableCarriersResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{15}
}

func (x *GetAppointableCarriersResponse) GetCarriers() []*Carrier {
	if x != nil {
		return x.Carriers
	}
	return nil
}

// Represents a carrier that is available to be appointed.
type Carrier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the carrier.
	CarrierId string `protobuf:"bytes,1,opt,name=carrier_id,json=carrierId,proto3" json:"carrier_id,omitempty"`
	// The name of the carrier.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The NPN of the carrier.
	Npn string `protobuf:"bytes,3,opt,name=npn,proto3" json:"npn,omitempty"`
	// The state of the carrier.
	Fein          string `protobuf:"bytes,4,opt,name=fein,proto3" json:"fein,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Carrier) Reset() {
	*x = Carrier{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Carrier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Carrier) ProtoMessage() {}

func (x *Carrier) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Carrier.ProtoReflect.Descriptor instead.
func (*Carrier) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{16}
}

func (x *Carrier) GetCarrierId() string {
	if x != nil {
		return x.CarrierId
	}
	return ""
}

func (x *Carrier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Carrier) GetNpn() string {
	if x != nil {
		return x.Npn
	}
	return ""
}

func (x *Carrier) GetFein() string {
	if x != nil {
		return x.Fein
	}
	return ""
}

// Represents an appointment for a license.
type Appointment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the appointment.
	AppointmentId string `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	// Information about the license being appointed.
	License *License `protobuf:"bytes,2,opt,name=license,proto3" json:"license,omitempty"`
	// The license number of the license being appointed.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the agency that is appointed.
	AgencyId string `protobuf:"bytes,4,opt,name=agency_id,json=agencyId,proto3" json:"agency_id,omitempty"`
	// The id of the producer that is appointed, if any.
	ProducerId *string `protobuf:"bytes,5,opt,name=producer_id,json=producerId,proto3,oneof" json:"producer_id,omitempty"`
	// The name of the carrier to which the license is appointed.
	Carrier string `protobuf:"bytes,6,opt,name=carrier,proto3" json:"carrier,omitempty"`
	// Type of appointment (e.g., up-front, registry).
	AppointmentType AppointmentType `protobuf:"varint,7,opt,name=appointment_type,json=appointmentType,proto3,enum=producerflow.appointment.v1.AppointmentType" json:"appointment_type,omitempty"`
	// Processing status of the appointment (e.g., in progress, appointed).
	ProcessingStatus ProcessingStatus `protobuf:"varint,8,opt,name=processing_status,json=processingStatus,proto3,enum=producerflow.appointment.v1.ProcessingStatus" json:"processing_status,omitempty"`
	// Optional comments or notes related to the appointment.
	Comments string `protobuf:"bytes,9,opt,name=comments,proto3" json:"comments,omitempty"`
	// Timestamp of the last update to the appointment.
	EffectiveDate *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
	// Timestamp of the termination of the appointment.
	TerminationDate *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=termination_date,json=terminationDate,proto3,oneof" json:"termination_date,omitempty"`
	// Timestamp of the last update to the appointment.
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Appointment) Reset() {
	*x = Appointment{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Appointment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Appointment) ProtoMessage() {}

func (x *Appointment) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Appointment.ProtoReflect.Descriptor instead.
func (*Appointment) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{17}
}

func (x *Appointment) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *Appointment) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *Appointment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Appointment) GetAgencyId() string {
	if x != nil {
		return x.AgencyId
	}
	return ""
}

func (x *Appointment) GetProducerId() string {
	if x != nil && x.ProducerId != nil {
		return *x.ProducerId
	}
	return ""
}

func (x *Appointment) GetCarrier() string {
	if x != nil {
		return x.Carrier
	}
	return ""
}

func (x *Appointment) GetAppointmentType() AppointmentType {
	if x != nil {
		return x.AppointmentType
	}
	return AppointmentType_APPOINTMENT_TYPE_UNSPECIFIED
}

func (x *Appointment) GetProcessingStatus() ProcessingStatus {
	if x != nil {
		return x.ProcessingStatus
	}
	return ProcessingStatus_PROCESSING_STATUS_UNSPECIFIED
}

func (x *Appointment) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *Appointment) GetEffectiveDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectiveDate
	}
	return nil
}

func (x *Appointment) GetTerminationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TerminationDate
	}
	return nil
}

func (x *Appointment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type License struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the license.
	LicenseId string `protobuf:"bytes,1,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	// The license number.
	LicenseNumber string `protobuf:"bytes,2,opt,name=license_number,json=licenseNumber,proto3" json:"license_number,omitempty"`
	// The owner of the license, it can be an agency or a producer.
	//
	// Types that are valid to be assigned to LicenseOwner:
	//
	//	*License_ProducerId
	//	*License_AgencyId
	LicenseOwner isLicense_LicenseOwner `protobuf_oneof:"license_owner"`
	// The two-letter state code of the license.
	State string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	// The license class.
	LicenseClass  string `protobuf:"bytes,6,opt,name=license_class,json=licenseClass,proto3" json:"license_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *License) Reset() {
	*x = License{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{18}
}

func (x *License) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

func (x *License) GetLicenseNumber() string {
	if x != nil {
		return x.LicenseNumber
	}
	return ""
}

func (x *License) GetLicenseOwner() isLicense_LicenseOwner {
	if x != nil {
		return x.LicenseOwner
	}
	return nil
}

func (x *License) GetProducerId() string {
	if x != nil {
		if x, ok := x.LicenseOwner.(*License_ProducerId); ok {
			return x.ProducerId
		}
	}
	return ""
}

func (x *License) GetAgencyId() string {
	if x != nil {
		if x, ok := x.LicenseOwner.(*License_AgencyId); ok {
			return x.AgencyId
		}
	}
	return ""
}

func (x *License) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *License) GetLicenseClass() string {
	if x != nil {
		return x.LicenseClass
	}
	return ""
}

type isLicense_LicenseOwner interface {
	isLicense_LicenseOwner()
}

type License_ProducerId struct {
	ProducerId string `protobuf:"bytes,3,opt,name=producer_id,json=producerId,proto3,oneof"`
}

type License_AgencyId struct {
	AgencyId string `protobuf:"bytes,4,opt,name=agency_id,json=agencyId,proto3,oneof"`
}

func (*License_ProducerId) isLicense_LicenseOwner() {}

func (*License_AgencyId) isLicense_LicenseOwner() {}

type ListTerminationReasonsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The two-letter state code of the license for which you want to retrieve
	// valid termination reasons. Different states may have different sets of valid
	// termination reasons accepted by NIPR.
	State         string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTerminationReasonsRequest) Reset() {
	*x = ListTerminationReasonsRequest{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTerminationReasonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTerminationReasonsRequest) ProtoMessage() {}

func (x *ListTerminationReasonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTerminationReasonsRequest.ProtoReflect.Descriptor instead.
func (*ListTerminationReasonsRequest) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{19}
}

func (x *ListTerminationReasonsRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ListTerminationReasonsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of valid termination reasons for the specified state.
	// These reasons can be used when calling TerminateAppointment for licenses
	// issued in this state.
	TerminationReasons []TerminationReason `protobuf:"varint,1,rep,packed,name=termination_reasons,json=terminationReasons,proto3,enum=producerflow.appointment.v1.TerminationReason" json:"termination_reasons,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListTerminationReasonsResponse) Reset() {
	*x = ListTerminationReasonsResponse{}
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTerminationReasonsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTerminationReasonsResponse) ProtoMessage() {}

func (x *ListTerminationReasonsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_producerflow_appointment_v1_appointment_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTerminationReasonsResponse.ProtoReflect.Descriptor instead.
func (*ListTerminationReasonsResponse) Descriptor() ([]byte, []int) {
	return file_producerflow_appointment_v1_appointment_proto_rawDescGZIP(), []int{20}
}

func (x *ListTerminationReasonsResponse) GetTerminationReasons() []TerminationReason {
	if x != nil {
		return x.TerminationReasons
	}
	return nil
}

var File_producerflow_appointment_v1_appointment_proto protoreflect.FileDescriptor

const file_producerflow_appointment_v1_appointment_proto_rawDesc = "" +
	"\n" +
	"-producerflow/appointment/v1/appointment.proto\x12\x1bproducerflow.appointment.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"k\n" +
	"\x19RequestAppointmentRequest\x12&\n" +
	"\n" +
	"license_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\tlicenseId\x12&\n" +
	"\n" +
	"carrier_id\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\tcarrierId\"\xd1\x01\n" +
	"\x1aRequestAppointmentResponse\x12%\n" +
	"\x0eappointment_id\x18\x01 \x01(\tR\rappointmentId\x12Z\n" +
	"\x11processing_status\x18\x02 \x01(\x0e2-.producerflow.appointment.v1.ProcessingStatusR\x10processingStatus\x120\n" +
	"\x14not_eligible_reasons\x18\x03 \x03(\tR\x12notEligibleReasons\"G\n" +
	"\x15GetAppointmentRequest\x12.\n" +
	"\x0eappointment_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rappointmentId\"d\n" +
	"\x16GetAppointmentResponse\x12J\n" +
	"\vappointment\x18\x01 \x01(\v2(.producerflow.appointment.v1.AppointmentR\vappointment\"\xe3\x01\n" +
	"\x17ListAppointmentsRequest\x12Z\n" +
	"\x11processing_status\x18\x01 \x03(\x0e2-.producerflow.appointment.v1.ProcessingStatusR\x10processingStatus\x12+\n" +
	"\vproducer_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x00R\n" +
	"producerId\x12'\n" +
	"\tagency_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x00R\bagencyIdB\x16\n" +
	"\rlicense_owner\x12\x05\xbaH\x02\b\x01\"\x90\x01\n" +
	"\x18ListAppointmentsResponse\x12L\n" +
	"\fappointments\x18\x01 \x03(\v2(.producerflow.appointment.v1.AppointmentR\fappointments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xa0\x01\n" +
	"\x1bTerminateAppointmentRequest\x12/\n" +
	"\x0eappointment_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rappointmentId\x12P\n" +
	"\x06reason\x18\x02 \x01(\x0e2..producerflow.appointment.v1.TerminationReasonB\b\xbaH\x05\x82\x01\x02\x10\x01R\x06reason\"8\n" +
	"\x1cTerminateAppointmentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x87\x01\n" +
	"\x1bListEligibleLicensesRequest\x12+\n" +
	"\vproducer_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x00R\n" +
	"producerId\x12'\n" +
	"\tagency_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x00R\bagencyIdB\x12\n" +
	"\tapplicant\x12\x05\xbaH\x02\b\x01\"`\n" +
	"\x1cListEligibleLicensesResponse\x12@\n" +
	"\blicenses\x18\x01 \x03(\v2$.producerflow.appointment.v1.LicenseR\blicenses\"C\n" +
	"\x19GetAppointmentFeesRequest\x12&\n" +
	"\n" +
	"license_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\tlicenseId\">\n" +
	"\x1aGetAppointmentFeesResponse\x12 \n" +
	"\ffee_in_cents\x18\x01 \x01(\x03R\n" +
	"feeInCents\"C\n" +
	"\x19GetTerminationFeesRequest\x12&\n" +
	"\n" +
	"license_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\tlicenseId\">\n" +
	"\x1aGetTerminationFeesResponse\x12 \n" +
	"\ffee_in_cents\x18\x01 \x01(\x03R\n" +
	"feeInCents\"\x1f\n" +
	"\x1dGetAppointableCarriersRequest\"b\n" +
	"\x1eGetAppointableCarriersResponse\x12@\n" +
	"\bcarriers\x18\x01 \x03(\v2$.producerflow.appointment.v1.CarrierR\bcarriers\"b\n" +
	"\aCarrier\x12\x1d\n" +
	"\n" +
	"carrier_id\x18\x01 \x01(\tR\tcarrierId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03npn\x18\x03 \x01(\tR\x03npn\x12\x12\n" +
	"\x04fein\x18\x04 \x01(\tR\x04fein\"\xa5\x05\n" +
	"\vAppointment\x12%\n" +
	"\x0eappointment_id\x18\x01 \x01(\tR\rappointmentId\x12>\n" +
	"\alicense\x18\x02 \x01(\v2$.producerflow.appointment.v1.LicenseR\alicense\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1b\n" +
	"\tagency_id\x18\x04 \x01(\tR\bagencyId\x12$\n" +
	"\vproducer_id\x18\x05 \x01(\tH\x00R\n" +
	"producerId\x88\x01\x01\x12\x18\n" +
	"\acarrier\x18\x06 \x01(\tR\acarrier\x12W\n" +
	"\x10appointment_type\x18\a \x01(\x0e2,.producerflow.appointment.v1.AppointmentTypeR\x0fappointmentType\x12Z\n" +
	"\x11processing_status\x18\b \x01(\x0e2-.producerflow.appointment.v1.ProcessingStatusR\x10processingStatus\x12\x1a\n" +
	"\bcomments\x18\t \x01(\tR\bcomments\x12A\n" +
	"\x0eeffective_date\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\reffectiveDate\x12J\n" +
	"\x10termination_date\x18\v \x01(\v2\x1a.google.protobuf.TimestampH\x01R\x0fterminationDate\x88\x01\x01\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\x0e\n" +
	"\f_producer_idB\x13\n" +
	"\x11_termination_date\"\xf1\x01\n" +
	"\aLicense\x12\x1d\n" +
	"\n" +
	"license_id\x18\x01 \x01(\tR\tlicenseId\x12%\n" +
	"\x0elicense_number\x18\x02 \x01(\tR\rlicenseNumber\x12+\n" +
	"\vproducer_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x00R\n" +
	"producerId\x12'\n" +
	"\tagency_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x00R\bagencyId\x12\x14\n" +
	"\x05state\x18\x05 \x01(\tR\x05state\x12#\n" +
	"\rlicense_class\x18\x06 \x01(\tR\flicenseClassB\x0f\n" +
	"\rlicense_owner\"?\n" +
	"\x1dListTerminationReasonsRequest\x12\x1e\n" +
	"\x05state\x18\x01 \x01(\tB\b\xbaH\x05r\x03\x98\x01\x02R\x05state\"\x81\x01\n" +
	"\x1eListTerminationReasonsResponse\x12_\n" +
	"\x13termination_reasons\x18\x01 \x03(\x0e2..producerflow.appointment.v1.TerminationReasonR\x12terminationReasons*\xe2\x01\n" +
	"\x10ProcessingStatus\x12!\n" +
	"\x1dPROCESSING_STATUS_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dPROCESSING_STATUS_IN_PROGRESS\x10\x01\x12\x1f\n" +
	"\x1bPROCESSING_STATUS_APPOINTED\x10\x02\x12 \n" +
	"\x1cPROCESSING_STATUS_TERMINATED\x10\x03\x12\x1e\n" +
	"\x1aPROCESSING_STATUS_REJECTED\x10\x04\x12%\n" +
	"!PROCESSING_STATUS_MISSING_LICENSE\x10\x05*\x94\x01\n" +
	"\x0fAppointmentType\x12 \n" +
	"\x1cAPPOINTMENT_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19APPOINTMENT_TYPE_REGISTRY\x10\x01\x12\x1d\n" +
	"\x19APPOINTMENT_TYPE_UP_FRONT\x10\x02\x12!\n" +
	"\x1dAPPOINTMENT_TYPE_JUST_IN_TIME\x10\x03*\xc1\x05\n" +
	"\x11TerminationReason\x12\"\n" +
	"\x1eTERMINATION_REASON_UNSPECIFIED\x10\x00\x12,\n" +
	"(TERMINATION_REASON_VOLUNTARY_TERMINATION\x10\x01\x12,\n" +
	"(TERMINATION_REASON_INADEQUATE_PRODUCTION\x10\x02\x121\n" +
	"-TERMINATION_REASON_CANCELLED_BY_GENERAL_AGENT\x10\x03\x12\x1c\n" +
	"\x18TERMINATION_REASON_DEATH\x10\x04\x125\n" +
	"1TERMINATION_REASON_COMPANY_DEFUNCT_OR_LIQUIDATION\x10\x05\x12+\n" +
	"'TERMINATION_REASON_COMPANY_INDEBTEDNESS\x10\x06\x120\n" +
	",TERMINATION_REASON_POOR_POLICYHOLDER_SERVICE\x10\a\x12\"\n" +
	"\x1eTERMINATION_REASON_AGENT_MOVED\x10\b\x12)\n" +
	"%TERMINATION_REASON_APPOINTED_IN_ERROR\x10\t\x12 \n" +
	"\x1cTERMINATION_REASON_CANCELLED\x10\n" +
	"\x12*\n" +
	"&TERMINATION_REASON_CANCELLED_FOR_CAUSE\x10\v\x12%\n" +
	"!TERMINATION_REASON_COMPANY_MERGER\x10\f\x12\x1e\n" +
	"\x1aTERMINATION_REASON_REVOKED\x10\r\x12/\n" +
	"+TERMINATION_REASON_SUSPENDED_FOR_COMPLIANCE\x10\x0e\x120\n" +
	",TERMINATION_REASON_REQUEST_REGULATORY_REVIEW\x10\x0f2\xec\t\n" +
	"\x12AppointmentService\x12y\n" +
	"\x0eGetAppointment\x122.producerflow.appointment.v1.GetAppointmentRequest\x1a3.producerflow.appointment.v1.GetAppointmentResponse\x12\x85\x01\n" +
	"\x12GetAppointmentFees\x126.producerflow.appointment.v1.GetAppointmentFeesRequest\x1a7.producerflow.appointment.v1.GetAppointmentFeesResponse\x12\x91\x01\n" +
	"\x16GetAppointableCarriers\x12:.producerflow.appointment.v1.GetAppointableCarriersRequest\x1a;.producerflow.appointment.v1.GetAppointableCarriersResponse\x12\x85\x01\n" +
	"\x12GetTerminationFees\x126.producerflow.appointment.v1.GetTerminationFeesRequest\x1a7.producerflow.appointment.v1.GetTerminationFeesResponse\x12\x7f\n" +
	"\x10ListAppointments\x124.producerflow.appointment.v1.ListAppointmentsRequest\x1a5.producerflow.appointment.v1.ListAppointmentsResponse\x12\x8b\x01\n" +
	"\x14ListEligibleLicenses\x128.producerflow.appointment.v1.ListEligibleLicensesRequest\x1a9.producerflow.appointment.v1.ListEligibleLicensesResponse\x12\x85\x01\n" +
	"\x12RequestAppointment\x126.producerflow.appointment.v1.RequestAppointmentRequest\x1a7.producerflow.appointment.v1.RequestAppointmentResponse\x12\x8b\x01\n" +
	"\x14TerminateAppointment\x128.producerflow.appointment.v1.TerminateAppointmentRequest\x1a9.producerflow.appointment.v1.TerminateAppointmentResponse\x12\x91\x01\n" +
	"\x16ListTerminationReasons\x12:.producerflow.appointment.v1.ListTerminationReasonsRequest\x1a;.producerflow.appointment.v1.ListTerminationReasonsResponseB\x97\x02\n" +
	"\x1fcom.producerflow.appointment.v1B\x10AppointmentProtoP\x01ZTgithub.com/agentero/producerflowapi/gen/go/producerflow/appointment/v1;appointmentv1\xa2\x02\x03PAX\xaa\x02\x1bProducerflow.Appointment.V1\xca\x02\x1bProducerflow\\Appointment\\V1\xe2\x02'Producerflow\\Appointment\\V1\\GPBMetadata\xea\x02\x1dProducerflow::Appointment::V1b\x06proto3"

var (
	file_producerflow_appointment_v1_appointment_proto_rawDescOnce sync.Once
	file_producerflow_appointment_v1_appointment_proto_rawDescData []byte
)

func file_producerflow_appointment_v1_appointment_proto_rawDescGZIP() []byte {
	file_producerflow_appointment_v1_appointment_proto_rawDescOnce.Do(func() {
		file_producerflow_appointment_v1_appointment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_producerflow_appointment_v1_appointment_proto_rawDesc), len(file_producerflow_appointment_v1_appointment_proto_rawDesc)))
	})
	return file_producerflow_appointment_v1_appointment_proto_rawDescData
}

var file_producerflow_appointment_v1_appointment_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_producerflow_appointment_v1_appointment_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_producerflow_appointment_v1_appointment_proto_goTypes = []any{
	(ProcessingStatus)(0),                  // 0: producerflow.appointment.v1.ProcessingStatus
	(AppointmentType)(0),                   // 1: producerflow.appointment.v1.AppointmentType
	(TerminationReason)(0),                 // 2: producerflow.appointment.v1.TerminationReason
	(*RequestAppointmentRequest)(nil),      // 3: producerflow.appointment.v1.RequestAppointmentRequest
	(*RequestAppointmentResponse)(nil),     // 4: producerflow.appointment.v1.RequestAppointmentResponse
	(*GetAppointmentRequest)(nil),          // 5: producerflow.appointment.v1.GetAppointmentRequest
	(*GetAppointmentResponse)(nil),         // 6: producerflow.appointment.v1.GetAppointmentResponse
	(*ListAppointmentsRequest)(nil),        // 7: producerflow.appointment.v1.ListAppointmentsRequest
	(*ListAppointmentsResponse)(nil),       // 8: producerflow.appointment.v1.ListAppointmentsResponse
	(*TerminateAppointmentRequest)(nil),    // 9: producerflow.appointment.v1.TerminateAppointmentRequest
	(*TerminateAppointmentResponse)(nil),   // 10: producerflow.appointment.v1.TerminateAppointmentResponse
	(*ListEligibleLicensesRequest)(nil),    // 11: producerflow.appointment.v1.ListEligibleLicensesRequest
	(*ListEligibleLicensesResponse)(nil),   // 12: producerflow.appointment.v1.ListEligibleLicensesResponse
	(*GetAppointmentFeesRequest)(nil),      // 13: producerflow.appointment.v1.GetAppointmentFeesRequest
	(*GetAppointmentFeesResponse)(nil),     // 14: producerflow.appointment.v1.GetAppointmentFeesResponse
	(*GetTerminationFeesRequest)(nil),      // 15: producerflow.appointment.v1.GetTerminationFeesRequest
	(*GetTerminationFeesResponse)(nil),     // 16: producerflow.appointment.v1.GetTerminationFeesResponse
	(*GetAppointableCarriersRequest)(nil),  // 17: producerflow.appointment.v1.GetAppointableCarriersRequest
	(*GetAppointableCarriersResponse)(nil), // 18: producerflow.appointment.v1.GetAppointableCarriersResponse
	(*Carrier)(nil),                        // 19: producerflow.appointment.v1.Carrier
	(*Appointment)(nil),                    // 20: producerflow.appointment.v1.Appointment
	(*License)(nil),                        // 21: producerflow.appointment.v1.License
	(*ListTerminationReasonsRequest)(nil),  // 22: producerflow.appointment.v1.ListTerminationReasonsRequest
	(*ListTerminationReasonsResponse)(nil), // 23: producerflow.appointment.v1.ListTerminationReasonsResponse
	(*timestamppb.Timestamp)(nil),          // 24: google.protobuf.Timestamp
}
var file_producerflow_appointment_v1_appointment_proto_depIdxs = []int32{
	0,  // 0: producerflow.appointment.v1.RequestAppointmentResponse.processing_status:type_name -> producerflow.appointment.v1.ProcessingStatus
	20, // 1: producerflow.appointment.v1.GetAppointmentResponse.appointment:type_name -> producerflow.appointment.v1.Appointment
	0,  // 2: producerflow.appointment.v1.ListAppointmentsRequest.processing_status:type_name -> producerflow.appointment.v1.ProcessingStatus
	20, // 3: producerflow.appointment.v1.ListAppointmentsResponse.appointments:type_name -> producerflow.appointment.v1.Appointment
	2,  // 4: producerflow.appointment.v1.TerminateAppointmentRequest.reason:type_name -> producerflow.appointment.v1.TerminationReason
	21, // 5: producerflow.appointment.v1.ListEligibleLicensesResponse.licenses:type_name -> producerflow.appointment.v1.License
	19, // 6: producerflow.appointment.v1.GetAppointableCarriersResponse.carriers:type_name -> producerflow.appointment.v1.Carrier
	21, // 7: producerflow.appointment.v1.Appointment.license:type_name -> producerflow.appointment.v1.License
	1,  // 8: producerflow.appointment.v1.Appointment.appointment_type:type_name -> producerflow.appointment.v1.AppointmentType
	0,  // 9: producerflow.appointment.v1.Appointment.processing_status:type_name -> producerflow.appointment.v1.ProcessingStatus
	24, // 10: producerflow.appointment.v1.Appointment.effective_date:type_name -> google.protobuf.Timestamp
	24, // 11: producerflow.appointment.v1.Appointment.termination_date:type_name -> google.protobuf.Timestamp
	24, // 12: producerflow.appointment.v1.Appointment.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 13: producerflow.appointment.v1.ListTerminationReasonsResponse.termination_reasons:type_name -> producerflow.appointment.v1.TerminationReason
	5,  // 14: producerflow.appointment.v1.AppointmentService.GetAppointment:input_type -> producerflow.appointment.v1.GetAppointmentRequest
	13, // 15: producerflow.appointment.v1.AppointmentService.GetAppointmentFees:input_type -> producerflow.appointment.v1.GetAppointmentFeesRequest
	17, // 16: producerflow.appointment.v1.AppointmentService.GetAppointableCarriers:input_type -> producerflow.appointment.v1.GetAppointableCarriersRequest
	15, // 17: producerflow.appointment.v1.AppointmentService.GetTerminationFees:input_type -> producerflow.appointment.v1.GetTerminationFeesRequest
	7,  // 18: producerflow.appointment.v1.AppointmentService.ListAppointments:input_type -> producerflow.appointment.v1.ListAppointmentsRequest
	11, // 19: producerflow.appointment.v1.AppointmentService.ListEligibleLicenses:input_type -> producerflow.appointment.v1.ListEligibleLicensesRequest
	3,  // 20: producerflow.appointment.v1.AppointmentService.RequestAppointment:input_type -> producerflow.appointment.v1.RequestAppointmentRequest
	9,  // 21: producerflow.appointment.v1.AppointmentService.TerminateAppointment:input_type -> producerflow.appointment.v1.TerminateAppointmentRequest
	22, // 22: producerflow.appointment.v1.AppointmentService.ListTerminationReasons:input_type -> producerflow.appointment.v1.ListTerminationReasonsRequest
	6,  // 23: producerflow.appointment.v1.AppointmentService.GetAppointment:output_type -> producerflow.appointment.v1.GetAppointmentResponse
	14, // 24: producerflow.appointment.v1.AppointmentService.GetAppointmentFees:output_type -> producerflow.appointment.v1.GetAppointmentFeesResponse
	18, // 25: producerflow.appointment.v1.AppointmentService.GetAppointableCarriers:output_type -> producerflow.appointment.v1.GetAppointableCarriersResponse
	16, // 26: producerflow.appointment.v1.AppointmentService.GetTerminationFees:output_type -> producerflow.appointment.v1.GetTerminationFeesResponse
	8,  // 27: producerflow.appointment.v1.AppointmentService.ListAppointments:output_type -> producerflow.appointment.v1.ListAppointmentsResponse
	12, // 28: producerflow.appointment.v1.AppointmentService.ListEligibleLicenses:output_type -> producerflow.appointment.v1.ListEligibleLicensesResponse
	4,  // 29: producerflow.appointment.v1.AppointmentService.RequestAppointment:output_type -> producerflow.appointment.v1.RequestAppointmentResponse
	10, // 30: producerflow.appointment.v1.AppointmentService.TerminateAppointment:output_type -> producerflow.appointment.v1.TerminateAppointmentResponse
	23, // 31: producerflow.appointment.v1.AppointmentService.ListTerminationReasons:output_type -> producerflow.appointment.v1.ListTerminationReasonsResponse
	23, // [23:32] is the sub-list for method output_type
	14, // [14:23] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_producerflow_appointment_v1_appointment_proto_init() }
func file_producerflow_appointment_v1_appointment_proto_init() {
	if File_producerflow_appointment_v1_appointment_proto != nil {
		return
	}
	file_producerflow_appointment_v1_appointment_proto_msgTypes[4].OneofWrappers = []any{
		(*ListAppointmentsRequest_ProducerId)(nil),
		(*ListAppointmentsRequest_AgencyId)(nil),
	}
	file_producerflow_appointment_v1_appointment_proto_msgTypes[8].OneofWrappers = []any{
		(*ListEligibleLicensesRequest_ProducerId)(nil),
		(*ListEligibleLicensesRequest_AgencyId)(nil),
	}
	file_producerflow_appointment_v1_appointment_proto_msgTypes[17].OneofWrappers = []any{}
	file_producerflow_appointment_v1_appointment_proto_msgTypes[18].OneofWrappers = []any{
		(*License_ProducerId)(nil),
		(*License_AgencyId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_producerflow_appointment_v1_appointment_proto_rawDesc), len(file_producerflow_appointment_v1_appointment_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_producerflow_appointment_v1_appointment_proto_goTypes,
		DependencyIndexes: file_producerflow_appointment_v1_appointment_proto_depIdxs,
		EnumInfos:         file_producerflow_appointment_v1_appointment_proto_enumTypes,
		MessageInfos:      file_producerflow_appointment_v1_appointment_proto_msgTypes,
	}.Build()
	File_producerflow_appointment_v1_appointment_proto = out.File
	file_producerflow_appointment_v1_appointment_proto_goTypes = nil
	file_producerflow_appointment_v1_appointment_proto_depIdxs = nil
}
