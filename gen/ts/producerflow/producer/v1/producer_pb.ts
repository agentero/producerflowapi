// @generated by protoc-gen-es v2.5.2 with parameter "target=ts,import_extension=none"
// @generated from file producerflow/producer/v1/producer.proto (package producerflow.producer.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { DayOfWeek } from "../../../google/type/dayofweek_pb";
import { file_google_type_dayofweek } from "../../../google/type/dayofweek_pb";
import type { TimeOfDay } from "../../../google/type/timeofday_pb";
import { file_google_type_timeofday } from "../../../google/type/timeofday_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file producerflow/producer/v1/producer.proto.
 */
export const file_producerflow_producer_v1_producer: GenFile = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_protobuf_timestamp, file_google_type_dayofweek, file_google_type_timeofday]);

/**
 * Address represents a physical location with standard address components.
 * Used for mailing, physical, and invoicing addresses throughout the API.
 *
 * @generated from message producerflow.producer.v1.Address
 */
export type Address = Message<"producerflow.producer.v1.Address"> & {
  /**
   * Street address including house/building number and street name
   *
   * @generated from field: string street = 1;
   */
  street: string;

  /**
   * City of the address
   *
   * @generated from field: string city = 2;
   */
  city: string;

  /**
   * State of the address
   *
   * @generated from field: string state = 3;
   */
  state: string;

  /**
   * Zip code of the address
   *
   * @generated from field: string zip = 4;
   */
  zip: string;

  /**
   * County of the address
   *
   * @generated from field: string county = 5;
   */
  county: string;
};

/**
 * Describes the message producerflow.producer.v1.Address.
 * Use `create(AddressSchema)` to create a new message.
 */
export const AddressSchema: GenMessage<Address> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 0);

/**
 * CreateAgencyOnboardingURLRequest contains information needed to generate
 * an agency onboarding URL. This includes basic agency information and defaults.
 *
 * @generated from message producerflow.producer.v1.CreateAgencyOnboardingURLRequest
 */
export type CreateAgencyOnboardingURLRequest = Message<"producerflow.producer.v1.CreateAgencyOnboardingURLRequest"> & {
  /**
   * @generated from field: producerflow.producer.v1.CreateAgencyOnboardingURLRequest.Agency agency = 1;
   */
  agency?: CreateAgencyOnboardingURLRequest_Agency;
};

/**
 * Describes the message producerflow.producer.v1.CreateAgencyOnboardingURLRequest.
 * Use `create(CreateAgencyOnboardingURLRequestSchema)` to create a new message.
 */
export const CreateAgencyOnboardingURLRequestSchema: GenMessage<CreateAgencyOnboardingURLRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 1);

/**
 * Agency contains the information about the agency to be onboarded
 *
 * @generated from message producerflow.producer.v1.CreateAgencyOnboardingURLRequest.Agency
 */
export type CreateAgencyOnboardingURLRequest_Agency = Message<"producerflow.producer.v1.CreateAgencyOnboardingURLRequest.Agency"> & {
  /**
   * Name of the agency
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Entity type of the agency: Sole Proprietor, Agency or Ask during onboarding
   *
   * @generated from field: producerflow.producer.v1.EntityType entity_type = 2;
   */
  entityType: EntityType;

  /**
   * Tenant agency id is a unique identifier for the agency used by the tenant
   * this is used to identify the agency in the tenant system not in the producerflow system
   *
   * @generated from field: string tenant_agency_id = 3;
   */
  tenantAgencyId: string;

  /**
   * DocuSign template id is the id of the docusign template used to send the contract to the agency
   *
   * @generated from field: string docusign_template_id = 4;
   */
  docusignTemplateId: string;

  /**
   * FEIN (Federal Employer Identification Number) of the agency
   *
   * @generated from field: string fein = 5;
   */
  fein: string;

  /**
   * Email of the agency
   *
   * @generated from field: string email = 6;
   */
  email: string;

  /**
   * Phone of the agency
   *
   * @generated from field: string phone = 7;
   */
  phone: string;

  /**
   * Fax of the agency
   *
   * @generated from field: string fax = 8;
   */
  fax: string;

  /**
   * Website of the agency
   *
   * @generated from field: string website = 9;
   */
  website: string;

  /**
   * NPN of the agency. Note that if the entity type is Sole Proprietor the NPN will be ignored
   *
   * @generated from field: string npn = 10;
   */
  npn: string;

  /**
   * Mailing address of the agency
   *
   * @generated from field: producerflow.producer.v1.Address mailing_address = 11;
   */
  mailingAddress?: Address;

  /**
   * Physical address of the agency
   *
   * @generated from field: producerflow.producer.v1.Address physical_address = 12;
   */
  physicalAddress?: Address;

  /**
   * Invoicing address of the agency
   *
   * @generated from field: producerflow.producer.v1.Address invoicing_address = 13;
   */
  invoicingAddress?: Address;

  /**
   * Organization ID of the agency
   *
   * @generated from field: string organization_id = 15;
   */
  organizationId: string;

  /**
   * @generated from field: producerflow.producer.v1.CreateAgencyOnboardingURLRequest.Agency.Principal principal = 14;
   */
  principal?: CreateAgencyOnboardingURLRequest_Agency_Principal;
};

/**
 * Describes the message producerflow.producer.v1.CreateAgencyOnboardingURLRequest.Agency.
 * Use `create(CreateAgencyOnboardingURLRequest_AgencySchema)` to create a new message.
 */
export const CreateAgencyOnboardingURLRequest_AgencySchema: GenMessage<CreateAgencyOnboardingURLRequest_Agency> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 1, 0);

/**
 * Principal is the person responsible for the agency
 *
 * @generated from message producerflow.producer.v1.CreateAgencyOnboardingURLRequest.Agency.Principal
 */
export type CreateAgencyOnboardingURLRequest_Agency_Principal = Message<"producerflow.producer.v1.CreateAgencyOnboardingURLRequest.Agency.Principal"> & {
  /**
   * Tenant ID of the principal
   *
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * First name of the principal
   *
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * Last name of the principal
   *
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * Middle name of the principal
   *
   * @generated from field: string middle_name = 4;
   */
  middleName: string;

  /**
   * Email of the principal
   *
   * @generated from field: string email = 5;
   */
  email: string;

  /**
   * Phone of the principal
   *
   * @generated from field: string phone = 6;
   */
  phone: string;

  /**
   * NPN of the principal
   *
   * @generated from field: string npn = 7;
   */
  npn: string;

  /**
   * Address of the principal
   *
   * @generated from field: producerflow.producer.v1.Address address = 8;
   */
  address?: Address;
};

/**
 * Describes the message producerflow.producer.v1.CreateAgencyOnboardingURLRequest.Agency.Principal.
 * Use `create(CreateAgencyOnboardingURLRequest_Agency_PrincipalSchema)` to create a new message.
 */
export const CreateAgencyOnboardingURLRequest_Agency_PrincipalSchema: GenMessage<CreateAgencyOnboardingURLRequest_Agency_Principal> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 1, 0, 0);

/**
 * CreateAgencyOnboardingURLResponse contains the generated URL for agency onboarding
 *
 * @generated from message producerflow.producer.v1.CreateAgencyOnboardingURLResponse
 */
export type CreateAgencyOnboardingURLResponse = Message<"producerflow.producer.v1.CreateAgencyOnboardingURLResponse"> & {
  /**
   * URL that can be shared with the agency for self-onboarding
   *
   * @generated from field: string url = 1;
   */
  url: string;
};

/**
 * Describes the message producerflow.producer.v1.CreateAgencyOnboardingURLResponse.
 * Use `create(CreateAgencyOnboardingURLResponseSchema)` to create a new message.
 */
export const CreateAgencyOnboardingURLResponseSchema: GenMessage<CreateAgencyOnboardingURLResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 2);

/**
 * NewAgencyRequest contains complete information for creating a new agency
 *
 * @generated from message producerflow.producer.v1.NewAgencyRequest
 */
export type NewAgencyRequest = Message<"producerflow.producer.v1.NewAgencyRequest"> & {
  /**
   * @generated from field: producerflow.producer.v1.NewAgencyRequest.Agency agency = 1;
   */
  agency?: NewAgencyRequest_Agency;

  /**
   * Determines if the agency should be auto approved.
   *
   * @generated from field: bool auto_approve = 2 [deprecated = true];
   * @deprecated
   */
  autoApprove: boolean;
};

/**
 * Describes the message producerflow.producer.v1.NewAgencyRequest.
 * Use `create(NewAgencyRequestSchema)` to create a new message.
 */
export const NewAgencyRequestSchema: GenMessage<NewAgencyRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 3);

/**
 * Agency contains all information about the agency to be created
 *
 * @generated from message producerflow.producer.v1.NewAgencyRequest.Agency
 */
export type NewAgencyRequest_Agency = Message<"producerflow.producer.v1.NewAgencyRequest.Agency"> & {
  /**
   * The name of the agency.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The email address of the agency.
   *
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * National Producer Number for the agency
   * Required for ENTITY_TYPE_AGENCY if FEIN is not provided
   * Not allowed for ENTITY_TYPE_SOLE_PROPRIETOR
   *
   * @generated from field: string npn = 3;
   */
  npn: string;

  /**
   * The phone number of the agency.
   *
   * @generated from field: string phone = 5;
   */
  phone: string;

  /**
   * The website of the agency.
   *
   * @generated from field: string website = 6;
   */
  website: string;

  /**
   * Information about the agency's principal.
   * This is a required field as each agency must have a principal.
   *
   * @generated from field: producerflow.producer.v1.NewAgencyRequest.Agency.Principal principal = 7;
   */
  principal?: NewAgencyRequest_Agency_Principal;

  /**
   * @generated from field: producerflow.producer.v1.NewAgencyRequest.Agency.BankAccount bank_account = 9;
   */
  bankAccount?: NewAgencyRequest_Agency_BankAccount;

  /**
   * @generated from field: producerflow.producer.v1.NewAgencyRequest.Agency.EOInfo eo_info = 10;
   */
  eoInfo?: NewAgencyRequest_Agency_EOInfo;

  /**
   * @generated from field: producerflow.producer.v1.NewAgencyRequest.Agency.BusinessHours business_hours = 11;
   */
  businessHours?: NewAgencyRequest_Agency_BusinessHours;

  /**
   * List of producers associated with the agency
   *
   * @generated from field: repeated producerflow.producer.v1.NewProducer producers = 12;
   */
  producers: NewProducer[];

  /**
   * @generated from field: repeated producerflow.producer.v1.NewAgencyRequest.Agency.PointOfContact points_of_contact = 13;
   */
  pointsOfContact: NewAgencyRequest_Agency_PointOfContact[];

  /**
   * RootOrganizationID represents the ID of the root organization that the agency belongs to.
   * An example of a root organization is an Aggregator (Like AgencyHero) or an Agency Network.
   * We currently don't support multiple levels of organizations or agencies.
   * Agencies are not always part of an organization, so this field is optional.
   *
   * @generated from field: optional string root_organization_id = 14;
   */
  rootOrganizationId?: string;

  /**
   * EntityType represents the type of business entity for an agency.
   *
   * @generated from field: producerflow.producer.v1.EntityType entity_type = 15;
   */
  entityType: EntityType;

  /**
   * FEIN represents the Federal Employer Identification Number of the agency.
   * Required for ENTITY_TYPE_AGENCY
   * Not allowed for ENTITY_TYPE_SOLE_PROPRIETOR
   *
   * @generated from field: optional string fein = 16;
   */
  fein?: string;

  /**
   * MailingAddress represents the mailing address of the agency.
   *
   * @generated from field: producerflow.producer.v1.Address mailing_address = 8;
   */
  mailingAddress?: Address;

  /**
   * PhysicalAddress represents the physical address of the agency.
   *
   * @generated from field: producerflow.producer.v1.Address physical_address = 17;
   */
  physicalAddress?: Address;

  /**
   * InvoicingAddress represents the invoicing address of the agency.
   *
   * @generated from field: producerflow.producer.v1.Address invoicing_address = 18;
   */
  invoicingAddress?: Address;

  /**
   * TenantAgencyID represents the ID of the agency in the tenant.
   * This is used to link the agency to the tenant.
   *
   * @generated from field: string tenant_agency_id = 19;
   */
  tenantAgencyId: string;
};

/**
 * Describes the message producerflow.producer.v1.NewAgencyRequest.Agency.
 * Use `create(NewAgencyRequest_AgencySchema)` to create a new message.
 */
export const NewAgencyRequest_AgencySchema: GenMessage<NewAgencyRequest_Agency> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 3, 0);

/**
 * Principal is a data structure that represents the principal of a agency.
 * A principal is the person or entity that is responsible for the day-to-day operations of the agency.
 * The principal is usually the CEO or CFO of the agency.nThe principal is also known as the "owner" of the agency.
 *
 * @generated from message producerflow.producer.v1.NewAgencyRequest.Agency.Principal
 */
export type NewAgencyRequest_Agency_Principal = Message<"producerflow.producer.v1.NewAgencyRequest.Agency.Principal"> & {
  /**
   * The first name of the principal.
   *
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * The last name of the principal.
   *
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * The middle name of the principal.
   *
   * @generated from field: string middle_name = 13;
   */
  middleName: string;

  /**
   * The email address of the principal.
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * The phone number of the principal.
   *
   * @generated from field: string phone = 4;
   */
  phone: string;

  /**
   * The National Producer Number (NPN) of the principal.
   *
   * @generated from field: string npn = 5;
   */
  npn: string;

  /**
   * @generated from field: string tenant_id = 6;
   */
  tenantId: string;
};

/**
 * Describes the message producerflow.producer.v1.NewAgencyRequest.Agency.Principal.
 * Use `create(NewAgencyRequest_Agency_PrincipalSchema)` to create a new message.
 */
export const NewAgencyRequest_Agency_PrincipalSchema: GenMessage<NewAgencyRequest_Agency_Principal> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 3, 0, 0);

/**
 * BankAccount contains banking information for commission payments
 * This is used to store the bank account information for the agency
 *
 * @generated from message producerflow.producer.v1.NewAgencyRequest.Agency.BankAccount
 */
export type NewAgencyRequest_Agency_BankAccount = Message<"producerflow.producer.v1.NewAgencyRequest.Agency.BankAccount"> & {
  /**
   * @generated from field: string account_number = 1;
   */
  accountNumber: string;

  /**
   * Routing number for the bank account
   *
   * @generated from field: string routing_number = 2;
   */
  routingNumber: string;

  /**
   * Type of account (checking or savings)
   *
   * @generated from field: producerflow.producer.v1.NewAgencyRequest.Agency.BankAccount.AccountType account_type = 3;
   */
  accountType: NewAgencyRequest_Agency_BankAccount_AccountType;

  /**
   * Name of the account holder
   *
   * @generated from field: string account_holder_name = 4;
   */
  accountHolderName: string;
};

/**
 * Describes the message producerflow.producer.v1.NewAgencyRequest.Agency.BankAccount.
 * Use `create(NewAgencyRequest_Agency_BankAccountSchema)` to create a new message.
 */
export const NewAgencyRequest_Agency_BankAccountSchema: GenMessage<NewAgencyRequest_Agency_BankAccount> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 3, 0, 1);

/**
 * @generated from enum producerflow.producer.v1.NewAgencyRequest.Agency.BankAccount.AccountType
 */
export enum NewAgencyRequest_Agency_BankAccount_AccountType {
  /**
   * Default unspecified value. Avoid using this.
   *
   * @generated from enum value: ACCOUNT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Standard checking account
   *
   * @generated from enum value: ACCOUNT_TYPE_CHECKING = 1;
   */
  CHECKING = 1,

  /**
   * Savings account
   *
   * @generated from enum value: ACCOUNT_TYPE_SAVINGS = 2;
   */
  SAVINGS = 2,
}

/**
 * Describes the enum producerflow.producer.v1.NewAgencyRequest.Agency.BankAccount.AccountType.
 */
export const NewAgencyRequest_Agency_BankAccount_AccountTypeSchema: GenEnum<NewAgencyRequest_Agency_BankAccount_AccountType> = /*@__PURE__*/
  enumDesc(file_producerflow_producer_v1_producer, 3, 0, 1, 0);

/**
 * EOInfo contains Errors & Omissions insurance information
 *
 * @generated from message producerflow.producer.v1.NewAgencyRequest.Agency.EOInfo
 */
export type NewAgencyRequest_Agency_EOInfo = Message<"producerflow.producer.v1.NewAgencyRequest.Agency.EOInfo"> & {
  /**
   * Insurance carrier providing the E&O coverage
   *
   * @generated from field: string carrier = 1;
   */
  carrier: string;

  /**
   * Date when the E&O coverage will expire
   *
   * @generated from field: google.protobuf.Timestamp expiration_date = 2;
   */
  expirationDate?: Timestamp;

  /**
   * Amount of coverage provided by the E&O policy
   *
   * @generated from field: string coverage_amount = 3;
   */
  coverageAmount: string;

  /**
   * Date when the E&O coverage will become effective
   *
   * @generated from field: google.protobuf.Timestamp effective_date = 4;
   */
  effectiveDate?: Timestamp;
};

/**
 * Describes the message producerflow.producer.v1.NewAgencyRequest.Agency.EOInfo.
 * Use `create(NewAgencyRequest_Agency_EOInfoSchema)` to create a new message.
 */
export const NewAgencyRequest_Agency_EOInfoSchema: GenMessage<NewAgencyRequest_Agency_EOInfo> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 3, 0, 2);

/**
 * BusinessHours contains the business hours of the agency
 *
 * @generated from message producerflow.producer.v1.NewAgencyRequest.Agency.BusinessHours
 */
export type NewAgencyRequest_Agency_BusinessHours = Message<"producerflow.producer.v1.NewAgencyRequest.Agency.BusinessHours"> & {
  /**
   * Timezone of the agency
   *
   * @generated from field: string timezone = 1;
   */
  timezone: string;

  /**
   * @generated from field: repeated producerflow.producer.v1.NewAgencyRequest.Agency.BusinessHours.BusinessHour business_hours = 2;
   */
  businessHours: NewAgencyRequest_Agency_BusinessHours_BusinessHour[];
};

/**
 * Describes the message producerflow.producer.v1.NewAgencyRequest.Agency.BusinessHours.
 * Use `create(NewAgencyRequest_Agency_BusinessHoursSchema)` to create a new message.
 */
export const NewAgencyRequest_Agency_BusinessHoursSchema: GenMessage<NewAgencyRequest_Agency_BusinessHours> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 3, 0, 3);

/**
 * @generated from message producerflow.producer.v1.NewAgencyRequest.Agency.BusinessHours.BusinessHour
 */
export type NewAgencyRequest_Agency_BusinessHours_BusinessHour = Message<"producerflow.producer.v1.NewAgencyRequest.Agency.BusinessHours.BusinessHour"> & {
  /**
   * Days of the week when the agency is open
   *
   * @generated from field: repeated google.type.DayOfWeek week_days = 1;
   */
  weekDays: DayOfWeek[];

  /**
   * Time when the agency opens
   *
   * @generated from field: google.type.TimeOfDay opening_time = 2;
   */
  openingTime?: TimeOfDay;

  /**
   * Time when the agency closes
   *
   * @generated from field: google.type.TimeOfDay closing_time = 3;
   */
  closingTime?: TimeOfDay;
};

/**
 * Describes the message producerflow.producer.v1.NewAgencyRequest.Agency.BusinessHours.BusinessHour.
 * Use `create(NewAgencyRequest_Agency_BusinessHours_BusinessHourSchema)` to create a new message.
 */
export const NewAgencyRequest_Agency_BusinessHours_BusinessHourSchema: GenMessage<NewAgencyRequest_Agency_BusinessHours_BusinessHour> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 3, 0, 3, 0);

/**
 * PointOfContact contains contact information for the agency. Each point of contact
 * consists of an email address with an associated role. Carriers will send specific
 * information to these email addresses based on their roles. For example, if an email
 * is assigned the COMMUNICATION_ROLE_ACCOUNTING role, all accounting information from
 * the carrier will be sent to that email address.
 *
 * @generated from message producerflow.producer.v1.NewAgencyRequest.Agency.PointOfContact
 */
export type NewAgencyRequest_Agency_PointOfContact = Message<"producerflow.producer.v1.NewAgencyRequest.Agency.PointOfContact"> & {
  /**
   * Email address of the point of contact
   *
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * Role of the point of contact
   *
   * @generated from field: producerflow.producer.v1.NewAgencyRequest.Agency.PointOfContact.CommunicationRole role = 2;
   */
  role: NewAgencyRequest_Agency_PointOfContact_CommunicationRole;
};

/**
 * Describes the message producerflow.producer.v1.NewAgencyRequest.Agency.PointOfContact.
 * Use `create(NewAgencyRequest_Agency_PointOfContactSchema)` to create a new message.
 */
export const NewAgencyRequest_Agency_PointOfContactSchema: GenMessage<NewAgencyRequest_Agency_PointOfContact> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 3, 0, 4);

/**
 * @generated from enum producerflow.producer.v1.NewAgencyRequest.Agency.PointOfContact.CommunicationRole
 */
export enum NewAgencyRequest_Agency_PointOfContact_CommunicationRole {
  /**
   * Default unspecified value. Avoid using this.
   *
   * @generated from enum value: COMMUNICATION_ROLE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Accounting role
   *
   * @generated from enum value: COMMUNICATION_ROLE_ACCOUNTING = 1;
   */
  ACCOUNTING = 1,

  /**
   * Licensing role
   *
   * @generated from enum value: COMMUNICATION_ROLE_LICENSING = 2;
   */
  LICENSING = 2,

  /**
   * Reporting role
   *
   * @generated from enum value: COMMUNICATION_ROLE_REPORTING = 3;
   */
  REPORTING = 3,

  /**
   * Sales role
   *
   * @generated from enum value: COMMUNICATION_ROLE_SALES = 4;
   */
  SALES = 4,

  /**
   * Customer service role
   *
   * @generated from enum value: COMMUNICATION_ROLE_CUSTOMER_SERVICE = 5;
   */
  CUSTOMER_SERVICE = 5,

  /**
   * All roles
   *
   * @generated from enum value: COMMUNICATION_ROLE_ALL = 6;
   */
  ALL = 6,
}

/**
 * Describes the enum producerflow.producer.v1.NewAgencyRequest.Agency.PointOfContact.CommunicationRole.
 */
export const NewAgencyRequest_Agency_PointOfContact_CommunicationRoleSchema: GenEnum<NewAgencyRequest_Agency_PointOfContact_CommunicationRole> = /*@__PURE__*/
  enumDesc(file_producerflow_producer_v1_producer, 3, 0, 4, 0);

/**
 * NewAgencyResponse contains the IDs of created resources after a successful agency creation
 *
 * @generated from message producerflow.producer.v1.NewAgencyResponse
 */
export type NewAgencyResponse = Message<"producerflow.producer.v1.NewAgencyResponse"> & {
  /**
   * Unique identifier for the created agency
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;

  /**
   * List of unique identifiers for any producers created with the agency
   *
   * @generated from field: repeated string producer_ids = 2;
   */
  producerIds: string[];

  /**
   * Unique identifier for the principal producer
   *
   * @generated from field: string principal_id = 3;
   */
  principalId: string;
};

/**
 * Describes the message producerflow.producer.v1.NewAgencyResponse.
 * Use `create(NewAgencyResponseSchema)` to create a new message.
 */
export const NewAgencyResponseSchema: GenMessage<NewAgencyResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 4);

/**
 * GetProducerRequest allows retrieving producer information through one of three
 * possible lookup methods: by ID, by NPN, or by email address.
 *
 * @generated from message producerflow.producer.v1.GetProducerRequest
 */
export type GetProducerRequest = Message<"producerflow.producer.v1.GetProducerRequest"> & {
  /**
   * Only one lookup method can be specified.
   *
   * @generated from oneof producerflow.producer.v1.GetProducerRequest.lookup_method
   */
  lookupMethod: {
    /**
     * Look up producer by ID.
     *
     * @generated from field: producerflow.producer.v1.GetProducerRequest.ProducerIDLookup producer_id_lookup = 1;
     */
    value: GetProducerRequest_ProducerIDLookup;
    case: "producerIdLookup";
  } | {
    /**
     * Look up producer by NPN.
     *
     * @generated from field: producerflow.producer.v1.GetProducerRequest.ProducerNPNLookup npn_lookup = 2;
     */
    value: GetProducerRequest_ProducerNPNLookup;
    case: "npnLookup";
  } | {
    /**
     * Look up producer by email.
     *
     * @generated from field: producerflow.producer.v1.GetProducerRequest.EmailLookup email_lookup = 3;
     */
    value: GetProducerRequest_EmailLookup;
    case: "emailLookup";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message producerflow.producer.v1.GetProducerRequest.
 * Use `create(GetProducerRequestSchema)` to create a new message.
 */
export const GetProducerRequestSchema: GenMessage<GetProducerRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 5);

/**
 * ProducerIDLookup allows looking up a producer by their unique identifier.
 *
 * @generated from message producerflow.producer.v1.GetProducerRequest.ProducerIDLookup
 */
export type GetProducerRequest_ProducerIDLookup = Message<"producerflow.producer.v1.GetProducerRequest.ProducerIDLookup"> & {
  /**
   * The UUID of the producer to retrieve.
   * Must be a valid UUID format.
   *
   * @generated from field: string producer_id = 1;
   */
  producerId: string;
};

/**
 * Describes the message producerflow.producer.v1.GetProducerRequest.ProducerIDLookup.
 * Use `create(GetProducerRequest_ProducerIDLookupSchema)` to create a new message.
 */
export const GetProducerRequest_ProducerIDLookupSchema: GenMessage<GetProducerRequest_ProducerIDLookup> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 5, 0);

/**
 * ProducerNPNLookup allows looking up a producer by their National Producer Number (NPN).
 *
 * @generated from message producerflow.producer.v1.GetProducerRequest.ProducerNPNLookup
 */
export type GetProducerRequest_ProducerNPNLookup = Message<"producerflow.producer.v1.GetProducerRequest.ProducerNPNLookup"> & {
  /**
   * The National Producer Number (NPN) of the producer to retrieve.
   * Must be a non-empty string.
   *
   * @generated from field: string producer_npn = 1;
   */
  producerNpn: string;
};

/**
 * Describes the message producerflow.producer.v1.GetProducerRequest.ProducerNPNLookup.
 * Use `create(GetProducerRequest_ProducerNPNLookupSchema)` to create a new message.
 */
export const GetProducerRequest_ProducerNPNLookupSchema: GenMessage<GetProducerRequest_ProducerNPNLookup> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 5, 1);

/**
 * EmailLookup allows looking up a producer by their email address.
 *
 * @generated from message producerflow.producer.v1.GetProducerRequest.EmailLookup
 */
export type GetProducerRequest_EmailLookup = Message<"producerflow.producer.v1.GetProducerRequest.EmailLookup"> & {
  /**
   * The email address of the producer to retrieve.
   * Must be a valid email format.
   *
   * @generated from field: string email = 1;
   */
  email: string;
};

/**
 * Describes the message producerflow.producer.v1.GetProducerRequest.EmailLookup.
 * Use `create(GetProducerRequest_EmailLookupSchema)` to create a new message.
 */
export const GetProducerRequest_EmailLookupSchema: GenMessage<GetProducerRequest_EmailLookup> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 5, 2);

/**
 * GetProducerResponse contains the producer information retrieved by the GetProducer RPC.
 *
 * @generated from message producerflow.producer.v1.GetProducerResponse
 */
export type GetProducerResponse = Message<"producerflow.producer.v1.GetProducerResponse"> & {
  /**
   * The complete producer information including personal details, agency association,
   * and NIPR data.
   *
   * @generated from field: producerflow.producer.v1.Producer producer = 1;
   */
  producer?: Producer;
};

/**
 * Describes the message producerflow.producer.v1.GetProducerResponse.
 * Use `create(GetProducerResponseSchema)` to create a new message.
 */
export const GetProducerResponseSchema: GenMessage<GetProducerResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 6);

/**
 * GetAgencyAndProducersRequest requests information about an agency and all associated producers.
 *
 * @generated from message producerflow.producer.v1.GetAgencyAndProducersRequest
 */
export type GetAgencyAndProducersRequest = Message<"producerflow.producer.v1.GetAgencyAndProducersRequest"> & {
  /**
   * The UUID of the agency to retrieve information for.
   * Must be a valid UUID format.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;
};

/**
 * Describes the message producerflow.producer.v1.GetAgencyAndProducersRequest.
 * Use `create(GetAgencyAndProducersRequestSchema)` to create a new message.
 */
export const GetAgencyAndProducersRequestSchema: GenMessage<GetAgencyAndProducersRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 7);

/**
 * GetAgencyAndProducersResponse contains the agency information and all associated producers.
 *
 * @generated from message producerflow.producer.v1.GetAgencyAndProducersResponse
 */
export type GetAgencyAndProducersResponse = Message<"producerflow.producer.v1.GetAgencyAndProducersResponse"> & {
  /**
   * Complete agency information including contact details, principal, and bank account.
   *
   * @generated from field: producerflow.producer.v1.Agency agency = 1;
   */
  agency?: Agency;

  /**
   * List of all producers associated with the specified agency.
   *
   * @generated from field: repeated producerflow.producer.v1.Producer producers = 2;
   */
  producers: Producer[];
};

/**
 * Describes the message producerflow.producer.v1.GetAgencyAndProducersResponse.
 * Use `create(GetAgencyAndProducersResponseSchema)` to create a new message.
 */
export const GetAgencyAndProducersResponseSchema: GenMessage<GetAgencyAndProducersResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 8);

/**
 * GetAgencyFilesRequest requests URLs for files associated with an agency.
 *
 * @generated from message producerflow.producer.v1.GetAgencyFilesRequest
 */
export type GetAgencyFilesRequest = Message<"producerflow.producer.v1.GetAgencyFilesRequest"> & {
  /**
   * The UUID of the agency to retrieve files for.
   * Must be a valid UUID format.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;
};

/**
 * Describes the message producerflow.producer.v1.GetAgencyFilesRequest.
 * Use `create(GetAgencyFilesRequestSchema)` to create a new message.
 */
export const GetAgencyFilesRequestSchema: GenMessage<GetAgencyFilesRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 9);

/**
 * GetAgencyFilesResponse contains URLs for various documents associated with an agency.
 *
 * @generated from message producerflow.producer.v1.GetAgencyFilesResponse
 */
export type GetAgencyFilesResponse = Message<"producerflow.producer.v1.GetAgencyFilesResponse"> & {
  /**
   * URL of the Errors & Omissions (E&O) insurance document.
   *
   * @generated from field: string eo_doc_url = 1;
   */
  eoDocUrl: string;

  /**
   * URL of the bank voided check document.
   * It's used to safely share bank account information for
   * electronic transfers.
   *
   * @generated from field: string voided_check_doc_url = 2;
   */
  voidedCheckDocUrl: string;

  /**
   * URL of the W9 form document.
   * It's a U.S. internal revenue service form, an identification
   * document used in the onboarding process for tax reporting purposes.
   *
   * @generated from field: string w9_doc_url = 3;
   */
  w9DocUrl: string;

  /**
   * URL of the license document.
   * An identification document that shows that the agency
   * is licensed to carry out its operations in the relevant jurisdictions.
   *
   * @generated from field: string license_doc_url = 4;
   */
  licenseDocUrl: string;

  /**
   * URL of the broker bond document.
   * It's a surety bond that a broker needs to operate legally,
   * providing financial security for clients.
   *
   * @generated from field: string broker_bond_doc_url = 5;
   */
  brokerBondDocUrl: string;
};

/**
 * Describes the message producerflow.producer.v1.GetAgencyFilesResponse.
 * Use `create(GetAgencyFilesResponseSchema)` to create a new message.
 */
export const GetAgencyFilesResponseSchema: GenMessage<GetAgencyFilesResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 10);

/**
 * UpdateProducerRequest contains the fields that can be updated in a producer record.
 * Only information collected during the onboarding process can be updated.
 * Information from NIPR and other third-party sources cannot be updated directly.
 *
 * @generated from message producerflow.producer.v1.UpdateProducerRequest
 */
export type UpdateProducerRequest = Message<"producerflow.producer.v1.UpdateProducerRequest"> & {
  /**
   * The ID of the producer to update.
   * Must be a valid UUID format.
   *
   * @generated from field: string producer_id = 1;
   */
  producerId: string;

  /**
   * The producer information to update.
   * The field is required.
   *
   * @generated from field: producerflow.producer.v1.UpdateProducerRequest.Producer producer = 2;
   */
  producer?: UpdateProducerRequest_Producer;
};

/**
 * Describes the message producerflow.producer.v1.UpdateProducerRequest.
 * Use `create(UpdateProducerRequestSchema)` to create a new message.
 */
export const UpdateProducerRequestSchema: GenMessage<UpdateProducerRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 11);

/**
 * Producer contains the fields that can be updated for a producer.
 * All fields are optional, allowing partial updates.
 *
 * @generated from message producerflow.producer.v1.UpdateProducerRequest.Producer
 */
export type UpdateProducerRequest_Producer = Message<"producerflow.producer.v1.UpdateProducerRequest.Producer"> & {
  /**
   * First name of the producer.
   * If provided, must be non-empty.
   *
   * @generated from field: optional string first_name = 1;
   */
  firstName?: string;

  /**
   * Last name of the producer.
   * If provided, must be non-empty.
   *
   * @generated from field: optional string last_name = 2;
   */
  lastName?: string;

  /**
   * Middle name of the producer.
   * If provided, must be non-empty.
   *
   * @generated from field: optional string middle_name = 10;
   */
  middleName?: string;

  /**
   * Email address of the producer.
   * If provided, must be a valid email format.
   * Must be unique within the tenant.
   *
   * @generated from field: optional string email = 3;
   */
  email?: string;

  /**
   * National Producer Number (NPN) of the producer.
   * If provided, must be non-empty.
   *
   * @generated from field: optional string npn = 4;
   */
  npn?: string;

  /**
   * Phone number of the producer.
   * If provided, must be a valid phone number format.
   *
   * @generated from field: optional string phone = 5;
   */
  phone?: string;

  /**
   * Street address of the producer.
   * If provided, must be non-empty.
   *
   * @generated from field: optional string street = 6;
   */
  street?: string;

  /**
   * City of the producer.
   * If provided, must be non-empty.
   *
   * @generated from field: optional string city = 7;
   */
  city?: string;

  /**
   * State of the producer.
   * If provided, must be non-empty.
   *
   * @generated from field: optional string state = 8;
   */
  state?: string;

  /**
   * ZIP code of the producer's address.
   * If provided, must be at least 5 characters.
   *
   * @generated from field: optional string zip = 9;
   */
  zip?: string;
};

/**
 * Describes the message producerflow.producer.v1.UpdateProducerRequest.Producer.
 * Use `create(UpdateProducerRequest_ProducerSchema)` to create a new message.
 */
export const UpdateProducerRequest_ProducerSchema: GenMessage<UpdateProducerRequest_Producer> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 11, 0);

/**
 * UpdateProducerResponse is the empty response returned after successfully updating a producer.
 *
 * @generated from message producerflow.producer.v1.UpdateProducerResponse
 */
export type UpdateProducerResponse = Message<"producerflow.producer.v1.UpdateProducerResponse"> & {
};

/**
 * Describes the message producerflow.producer.v1.UpdateProducerResponse.
 * Use `create(UpdateProducerResponseSchema)` to create a new message.
 */
export const UpdateProducerResponseSchema: GenMessage<UpdateProducerResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 12);

/**
 * ListNewProducersRequest requests a list of new producers, optionally filtered by agency.
 *
 * @generated from message producerflow.producer.v1.ListNewProducersRequest
 */
export type ListNewProducersRequest = Message<"producerflow.producer.v1.ListNewProducersRequest"> & {
  /**
   * Optional agency ID to filter producers by.
   * If provided, only producers belonging to this agency will be returned.
   * If not provided, producers from all agencies will be returned.
   *
   * @generated from field: optional string agency_id = 1;
   */
  agencyId?: string;
};

/**
 * Describes the message producerflow.producer.v1.ListNewProducersRequest.
 * Use `create(ListNewProducersRequestSchema)` to create a new message.
 */
export const ListNewProducersRequestSchema: GenMessage<ListNewProducersRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 13);

/**
 * ListNewProducersResponse contains a list of new producers that match the filter criteria.
 *
 * @generated from message producerflow.producer.v1.ListNewProducersResponse
 */
export type ListNewProducersResponse = Message<"producerflow.producer.v1.ListNewProducersResponse"> & {
  /**
   * List of new producers matching the filter criteria.
   * These are producers typically in the NEW or pending onboarding state.
   *
   * @generated from field: repeated producerflow.producer.v1.Producer new_producers = 1;
   */
  newProducers: Producer[];
};

/**
 * Describes the message producerflow.producer.v1.ListNewProducersResponse.
 * Use `create(ListNewProducersResponseSchema)` to create a new message.
 */
export const ListNewProducersResponseSchema: GenMessage<ListNewProducersResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 14);

/**
 * ApproveProducerRequest requests approval for a producer in the onboarding process.
 *
 * @generated from message producerflow.producer.v1.ApproveProducerRequest
 * @deprecated
 */
export type ApproveProducerRequest = Message<"producerflow.producer.v1.ApproveProducerRequest"> & {
  /**
   * The UUID of the producer to approve.
   * Must be a valid UUID format.
   *
   * @generated from field: string producer_id = 1;
   */
  producerId: string;
};

/**
 * Describes the message producerflow.producer.v1.ApproveProducerRequest.
 * Use `create(ApproveProducerRequestSchema)` to create a new message.
 * @deprecated
 */
export const ApproveProducerRequestSchema: GenMessage<ApproveProducerRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 15);

/**
 * ApproveProducerResponse is the empty response returned after successfully approving a producer.
 *
 * @generated from message producerflow.producer.v1.ApproveProducerResponse
 */
export type ApproveProducerResponse = Message<"producerflow.producer.v1.ApproveProducerResponse"> & {
};

/**
 * Describes the message producerflow.producer.v1.ApproveProducerResponse.
 * Use `create(ApproveProducerResponseSchema)` to create a new message.
 */
export const ApproveProducerResponseSchema: GenMessage<ApproveProducerResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 16);

/**
 * RejectProducerRequest requests rejection of a producer in the onboarding process.
 *
 * @generated from message producerflow.producer.v1.RejectProducerRequest
 */
export type RejectProducerRequest = Message<"producerflow.producer.v1.RejectProducerRequest"> & {
  /**
   * The UUID of the producer to reject.
   * Must be a valid UUID format.
   *
   * @generated from field: string producer_id = 1;
   */
  producerId: string;

  /**
   * The reason for rejecting the producer.
   * Must be non-empty to provide context for the rejection.
   *
   * @generated from field: string reason = 2;
   */
  reason: string;
};

/**
 * Describes the message producerflow.producer.v1.RejectProducerRequest.
 * Use `create(RejectProducerRequestSchema)` to create a new message.
 */
export const RejectProducerRequestSchema: GenMessage<RejectProducerRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 17);

/**
 * RejectProducerResponse is the empty response returned after successfully rejecting a producer.
 *
 * @generated from message producerflow.producer.v1.RejectProducerResponse
 */
export type RejectProducerResponse = Message<"producerflow.producer.v1.RejectProducerResponse"> & {
};

/**
 * Describes the message producerflow.producer.v1.RejectProducerResponse.
 * Use `create(RejectProducerResponseSchema)` to create a new message.
 */
export const RejectProducerResponseSchema: GenMessage<RejectProducerResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 18);

/**
 * Agency represents a complete agency entity with all associated information.
 *
 * @generated from message producerflow.producer.v1.Agency
 */
export type Agency = Message<"producerflow.producer.v1.Agency"> & {
  /**
   * Unique identifier for the agency.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;

  /**
   * AgencyInfo type field named agency_info
   *
   * @generated from field: producerflow.producer.v1.Agency.AgencyInfo agency_info = 2;
   */
  agencyInfo?: Agency_AgencyInfo;

  /**
   * Address type field named address.
   *
   * @generated from field: producerflow.producer.v1.Agency.Address address = 3;
   */
  address?: Agency_Address;

  /**
   * Address type field named mailing_address.
   *
   * @generated from field: producerflow.producer.v1.Agency.Address mailing_address = 4;
   */
  mailingAddress?: Agency_Address;

  /**
   * Banking information for commission payments.
   * Used for electronic transfers of commissions and other payments.
   *
   * @generated from field: producerflow.producer.v1.Agency.BankAccount bank_account = 5;
   */
  bankAccount?: Agency_BankAccount;

  /**
   * @generated from field: producerflow.producer.v1.Agency.EOInfo eo_info = 6;
   */
  eoInfo?: Agency_EOInfo;

  /**
   * Information about the agency's principal.
   * This is a required field as each agency must have a principal.
   *
   * @generated from field: producerflow.producer.v1.Agency.Principal principal = 7;
   */
  principal?: Agency_Principal;

  /**
   * IVANS account information for electronic carrier communication.
   * This is optional and only used if the agency uses IVANS.
   *
   * @generated from field: producerflow.producer.v1.Agency.IvansAccount ivans_account = 8;
   */
  ivansAccount?: Agency_IvansAccount;
};

/**
 * Describes the message producerflow.producer.v1.Agency.
 * Use `create(AgencySchema)` to create a new message.
 */
export const AgencySchema: GenMessage<Agency> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 19);

/**
 * AgencyInfo contains contact and identification information for an agency.
 *
 * @generated from message producerflow.producer.v1.Agency.AgencyInfo
 */
export type Agency_AgencyInfo = Message<"producerflow.producer.v1.Agency.AgencyInfo"> & {
  /**
   * The unique identifier for the onboarding process.
   * Used to track the agency through the onboarding flow.
   *
   * @generated from field: string onboarding_id = 1;
   */
  onboardingId: string;

  /**
   * The organization ID represents the ID of the root organization that the agency belongs to.
   * An example of a root organization is an Aggregator (Like AgencyHero) or an Agency Network.
   * We currently don't support multiple levels of organizations or agencies.
   * Agencies are not always part of an organization, so this field is optional.
   *
   * @generated from field: string root_organization_id = 2;
   */
  rootOrganizationId: string;

  /**
   * The official name of the agency.
   * This is typically the legal name of the entity.
   *
   * @generated from field: string agency_name = 3;
   */
  agencyName: string;

  /**
   * Federal Employer Identification Number (FEIN) of the agency.
   * This is a unique nine-digit number assigned by the Internal
   * Revenue Service (IRS) to businesses operating in the United States.
   *
   * @generated from field: string agency_fein = 4;
   */
  agencyFein: string;

  /**
   * Primary email address for the agency.
   * Used for communication and must be unique.
   *
   * @generated from field: string email = 5;
   */
  email: string;

  /**
   * Phone number for the agency.
   *
   * @generated from field: string phone = 6;
   */
  phone: string;

  /**
   * Fax number for the agency.
   *
   * @generated from field: string fax = 7;
   */
  fax: string;

  /**
   * Website URL for the agency, if available.
   *
   * @generated from field: string website = 8;
   */
  website: string;

  /**
   * National Producer Number (NPN) of the agency.
   * This is a unique identifier assigned by the National Association of Insurance Commissioners (NAIC).
   *
   * @generated from field: string npn = 9;
   */
  npn: string;

  /**
   * Indicates whether the agency is enabled to be synchronized with NIPR API.
   * When true, the system will regularly check for updates from NIPR.
   *
   * @generated from field: bool pdb_alerts_sync_enabled = 10;
   */
  pdbAlertsSyncEnabled: boolean;
};

/**
 * Describes the message producerflow.producer.v1.Agency.AgencyInfo.
 * Use `create(Agency_AgencyInfoSchema)` to create a new message.
 */
export const Agency_AgencyInfoSchema: GenMessage<Agency_AgencyInfo> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 19, 0);

/**
 * Address is a data structure that represents a physical or mailing
 * location.
 *
 * @generated from message producerflow.producer.v1.Agency.Address
 */
export type Agency_Address = Message<"producerflow.producer.v1.Agency.Address"> & {
  /**
   * Street name and number of the location.
   *
   * @generated from field: string street = 1;
   */
  street: string;

  /**
   * City where the location resides.
   *
   * @generated from field: string city = 2;
   */
  city: string;

  /**
   * State/Province where the location resides.
   *
   * @generated from field: string state = 3;
   */
  state: string;

  /**
   * ZIP/Postal code of the location.
   *
   * @generated from field: string zip = 4;
   */
  zip: string;
};

/**
 * Describes the message producerflow.producer.v1.Agency.Address.
 * Use `create(Agency_AddressSchema)` to create a new message.
 */
export const Agency_AddressSchema: GenMessage<Agency_Address> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 19, 1);

/**
 * BankAccount contains information about a bank account for commission payments.
 *
 * @generated from message producerflow.producer.v1.Agency.BankAccount
 */
export type Agency_BankAccount = Message<"producerflow.producer.v1.Agency.BankAccount"> & {
  /**
   * Account number for the bank account.
   *
   * @generated from field: string account_number = 1;
   */
  accountNumber: string;

  /**
   * Routing number for the bank.
   * This is a nine-digit code identifying the financial institution.
   *
   * @generated from field: string routing_number = 2;
   */
  routingNumber: string;

  /**
   * Type of account (checking or savings).
   * Indicates how the account should be treated for electronic transfers.
   *
   * @generated from field: producerflow.producer.v1.Agency.BankAccount.AccountType account_type = 3;
   */
  accountType: Agency_BankAccount_AccountType;

  /**
   * Name of the account holder as it appears on bank records.
   *
   * @generated from field: string account_holder_name = 4;
   */
  accountHolderName: string;
};

/**
 * Describes the message producerflow.producer.v1.Agency.BankAccount.
 * Use `create(Agency_BankAccountSchema)` to create a new message.
 */
export const Agency_BankAccountSchema: GenMessage<Agency_BankAccount> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 19, 2);

/**
 * The type of account.
 *
 * @generated from enum producerflow.producer.v1.Agency.BankAccount.AccountType
 */
export enum Agency_BankAccount_AccountType {
  /**
   * Default unspecified value. Avoid using this.
   *
   * @generated from enum value: ACCOUNT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Standard checking account.
   *
   * @generated from enum value: ACCOUNT_TYPE_CHECKING = 1;
   */
  CHECKING = 1,

  /**
   * Savings account.
   *
   * @generated from enum value: ACCOUNT_TYPE_SAVINGS = 2;
   */
  SAVINGS = 2,
}

/**
 * Describes the enum producerflow.producer.v1.Agency.BankAccount.AccountType.
 */
export const Agency_BankAccount_AccountTypeSchema: GenEnum<Agency_BankAccount_AccountType> = /*@__PURE__*/
  enumDesc(file_producerflow_producer_v1_producer, 19, 2, 0);

/**
 * EOInfo contains Errors & Omissions insurance information
 *
 * @generated from message producerflow.producer.v1.Agency.EOInfo
 */
export type Agency_EOInfo = Message<"producerflow.producer.v1.Agency.EOInfo"> & {
  /**
   * Insurance carrier providing the E&O coverage
   *
   * @generated from field: string carrier = 1;
   */
  carrier: string;

  /**
   * Date when the E&O coverage will expire
   *
   * @generated from field: google.protobuf.Timestamp expiration_date = 2;
   */
  expirationDate?: Timestamp;

  /**
   * Amount of coverage provided by the E&O policy
   *
   * @generated from field: string coverage_amount = 3;
   */
  coverageAmount: string;
};

/**
 * Describes the message producerflow.producer.v1.Agency.EOInfo.
 * Use `create(Agency_EOInfoSchema)` to create a new message.
 */
export const Agency_EOInfoSchema: GenMessage<Agency_EOInfo> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 19, 3);

/**
 * Principal is a data structure that represents the principal of a agency.
 * A principal is the person or entity that is responsible for the day-to-day operations of the agency.
 * The principal is usually the CEO or CFO of the agency.nThe principal is also known as the "owner" of the agency.
 *
 * @generated from message producerflow.producer.v1.Agency.Principal
 */
export type Agency_Principal = Message<"producerflow.producer.v1.Agency.Principal"> & {
  /**
   * Unique identifier for the principal (as a producer).
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * First name of the principal.
   *
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * Last name of the principal.
   *
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * Middle name of the principal.
   *
   * @generated from field: string middle_name = 9;
   */
  middleName: string;

  /**
   * Email address of the principal.
   * Must be unique and is used for communication.
   *
   * @generated from field: string email = 4;
   */
  email: string;

  /**
   * The NPN of the principal. This is used to
   * retrieve the license information
   * of the principal from the NIPR API.
   *
   * @generated from field: string npn = 5;
   */
  npn: string;

  /**
   * Phone number of the principal.
   * Used for communication.
   *
   * @generated from field: string phone = 6;
   */
  phone: string;

  /**
   * Mailing address of the principal.
   * This may differ from the agency address.
   *
   * @generated from field: producerflow.producer.v1.Agency.Address mailing_address = 8;
   */
  mailingAddress?: Agency_Address;
};

/**
 * Describes the message producerflow.producer.v1.Agency.Principal.
 * Use `create(Agency_PrincipalSchema)` to create a new message.
 */
export const Agency_PrincipalSchema: GenMessage<Agency_Principal> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 19, 4);

/**
 * IvansAccount contains information for IVANS integration.
 * IVANS is a system for electronic communication between insurance agencies and carriers.
 *
 * @generated from message producerflow.producer.v1.Agency.IvansAccount
 */
export type Agency_IvansAccount = Message<"producerflow.producer.v1.Agency.IvansAccount"> & {
  /**
   * Account number for the IVANS service.
   *
   * @generated from field: string account_number = 1;
   */
  accountNumber: string;

  /**
   * Software used for IVANS communication.
   *
   * @generated from field: string ams_software = 2;
   */
  amsSoftware: string;

  /**
   * Version of the IVANS software.
   *
   * @generated from field: string ams_version = 3;
   */
  amsVersion: string;

  /**
   * Mailbox number for the IVANS service.
   * Used for routing electronic messages.
   *
   * @generated from field: string mailbox_number = 4;
   */
  mailboxNumber: string;
};

/**
 * Describes the message producerflow.producer.v1.Agency.IvansAccount.
 * Use `create(Agency_IvansAccountSchema)` to create a new message.
 */
export const Agency_IvansAccountSchema: GenMessage<Agency_IvansAccount> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 19, 5);

/**
 * Producer represents a producer that has been onboarded.
 *
 * Internal ID of the producer.
 *
 * @generated from message producerflow.producer.v1.Producer
 */
export type Producer = Message<"producerflow.producer.v1.Producer"> & {
  /**
   * The full name of the producer.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The email address of the producer.
   * Used for communication and must be unique within the tenant.
   * Must be a valid email format.
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * The National Producer Number (NPN) of the producer.
   * This is used to retrieve license information from the NIPR API.
   * Must be non-empty.
   *
   * @generated from field: string npn = 4;
   */
  npn: string;

  /**
   * Indicates whether the producer is enabled to be synchronized with NIPR API.
   * When true, the system will regularly check for updates from NIPR.
   *
   * @generated from field: bool pdb_alerts_sync_enabled = 13;
   */
  pdbAlertsSyncEnabled: boolean;

  /**
   * Basic information about the agency this producer is associated with.
   *
   * @generated from field: producerflow.producer.v1.Producer.Agency agency = 7;
   */
  agency?: Producer_Agency;

  /**
   * Data synchronized from the NIPR service.
   * Contains license information, biographic data, regulatory actions,
   * and carrier appointments.
   *
   * @generated from field: producerflow.producer.v1.Producer.NIPR nipr = 6;
   */
  nipr?: Producer_NIPR;

  /**
   * The status of the producer onboarding process.
   * This field is deprecated and should not be used in new code.
   *
   * @generated from field: producerflow.producer.v1.ProducerOnboardingState onboarding_status = 11 [deprecated = true];
   * @deprecated
   */
  onboardingStatus: ProducerOnboardingState;

  /**
   * Indicates whether this producer is the principal of an agency.
   * A principal producer has additional responsibilities and permissions.
   *
   * @generated from field: bool is_principal = 12;
   */
  isPrincipal: boolean;
};

/**
 * Describes the message producerflow.producer.v1.Producer.
 * Use `create(ProducerSchema)` to create a new message.
 */
export const ProducerSchema: GenMessage<Producer> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 20);

/**
 * Agency contains basic information about the agency this producer is associated with.
 *
 * @generated from message producerflow.producer.v1.Producer.Agency
 */
export type Producer_Agency = Message<"producerflow.producer.v1.Producer.Agency"> & {
  /**
   * Unique identifier for the associated agency.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;

  /**
   * Name of the associated agency.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message producerflow.producer.v1.Producer.Agency.
 * Use `create(Producer_AgencySchema)` to create a new message.
 */
export const Producer_AgencySchema: GenMessage<Producer_Agency> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 20, 0);

/**
 * NIPR contains data synchronized from the National Insurance Producer Registry.
 *
 * @generated from message producerflow.producer.v1.Producer.NIPR
 */
export type Producer_NIPR = Message<"producerflow.producer.v1.Producer.NIPR"> & {
  /**
   * List of all licenses held by the producer across different states.
   *
   * @generated from field: repeated producerflow.producer.v1.Producer.NIPR.License licenses = 6;
   */
  licenses: Producer_NIPR_License[];

  /**
   * Biographic information of the producer from NIPR
   *
   * @generated from field: producerflow.producer.v1.Producer.NIPR.Biographic biographic = 8;
   */
  biographic?: Producer_NIPR_Biographic;

  /**
   * Producer's regulatory information from NIPR
   *
   * @generated from field: producerflow.producer.v1.Producer.NIPR.ProducerRegulatoryInfo regulatory_info = 9;
   */
  regulatoryInfo?: Producer_NIPR_ProducerRegulatoryInfo;

  /**
   * List of carrier appointments held by the producer in NIPR.
   * These represent relationships with insurance carriers that allow
   * the producer to sell their products.
   *
   * @generated from field: repeated producerflow.producer.v1.Producer.NIPR.Appointment appointments = 10;
   */
  appointments: Producer_NIPR_Appointment[];
};

/**
 * Describes the message producerflow.producer.v1.Producer.NIPR.
 * Use `create(Producer_NIPRSchema)` to create a new message.
 */
export const Producer_NIPRSchema: GenMessage<Producer_NIPR> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 20, 1);

/**
 * License contains information about a producer's insurance license.
 *
 * @generated from message producerflow.producer.v1.Producer.NIPR.License
 */
export type Producer_NIPR_License = Message<"producerflow.producer.v1.Producer.NIPR.License"> & {
  /**
   * The license number assigned by the state regulatory authority.
   *
   * @generated from field: string license_number = 1;
   */
  licenseNumber: string;

  /**
   * The state that issued the license.
   * Typically a two-letter state code.
   *
   * @generated from field: string license_state = 2;
   */
  licenseState: string;

  /**
   * Indicates whether this is a resident or non-resident license.
   * Values are typically "Resident" or "Non-Resident".
   *
   * @generated from field: string residency_status = 3;
   */
  residencyStatus: string;

  /**
   * Indicates whether the license is currently active.
   *
   * @generated from field: bool active = 4;
   */
  active: boolean;

  /**
   * The current status of the license (valid, expired, etc.).
   *
   * @generated from field: producerflow.producer.v1.Producer.NIPR.License.LicenseStatus status = 5;
   */
  status: Producer_NIPR_License_LicenseStatus;

  /**
   * The date when the license will expire if not renewed.
   *
   * @generated from field: google.protobuf.Timestamp expiration_date = 6;
   */
  expirationDate?: Timestamp;

  /**
   * The last time this license information was updated from NIPR.
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message producerflow.producer.v1.Producer.NIPR.License.
 * Use `create(Producer_NIPR_LicenseSchema)` to create a new message.
 */
export const Producer_NIPR_LicenseSchema: GenMessage<Producer_NIPR_License> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 20, 1, 0);

/**
 * LicenseStatus defines the possible statuses of an insurance license.
 *
 * @generated from enum producerflow.producer.v1.Producer.NIPR.License.LicenseStatus
 */
export enum Producer_NIPR_License_LicenseStatus {
  /**
   * Default unspecified value. Avoid using this.
   *
   * @generated from enum value: LICENSE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The license has expired and is no longer valid.
   *
   * @generated from enum value: LICENSE_STATUS_EXPIRED = 1;
   */
  EXPIRED = 1,

  /**
   * License is currently active.
   *
   * @generated from enum value: LICENSE_STATUS_VALID = 2;
   */
  VALID = 2,

  /**
   * The license exists but is not in an active state.
   * This could be due to suspension, revocation, or other reasons.
   *
   * @generated from enum value: LICENSE_STATUS_NOT_ACTIVE = 3;
   */
  NOT_ACTIVE = 3,
}

/**
 * Describes the enum producerflow.producer.v1.Producer.NIPR.License.LicenseStatus.
 */
export const Producer_NIPR_License_LicenseStatusSchema: GenEnum<Producer_NIPR_License_LicenseStatus> = /*@__PURE__*/
  enumDesc(file_producerflow_producer_v1_producer, 20, 1, 0, 0);

/**
 * Biographic contains personal and identifying information about the producer.
 *
 * @generated from message producerflow.producer.v1.Producer.NIPR.Biographic
 */
export type Producer_NIPR_Biographic = Message<"producerflow.producer.v1.Producer.NIPR.Biographic"> & {
  /**
   * Last name of the producer as recorded in NIPR.
   *
   * @generated from field: string last_name = 1;
   */
  lastName: string;

  /**
   * First name of the producer as recorded in NIPR.
   *
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * Middle name of the producer as recorded in NIPR.
   *
   * @generated from field: string middle_name = 3;
   */
  middleName: string;

  /**
   * Date of birth of the producer.
   *
   * @generated from field: google.protobuf.Timestamp date_of_birth = 4;
   */
  dateOfBirth?: Timestamp;

  /**
   * Federal Employer Identification Number if the producer is a business entity.
   *
   * @generated from field: string fein = 7;
   */
  fein: string;

  /**
   * Company name if the producer is a business entity.
   *
   * @generated from field: string company_name = 8;
   */
  companyName: string;

  /**
   * State of domicile (resident state) for the producer.
   * This is the state where the producer is primarily located.
   *
   * @generated from field: string state_domicile = 9;
   */
  stateDomicile: string;
};

/**
 * Describes the message producerflow.producer.v1.Producer.NIPR.Biographic.
 * Use `create(Producer_NIPR_BiographicSchema)` to create a new message.
 */
export const Producer_NIPR_BiographicSchema: GenMessage<Producer_NIPR_Biographic> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 20, 1, 1);

/**
 * ProducerRegulatoryInfo contains regulatory information about a producer,
 * including any regulatory actions taken against them.
 *
 * @generated from message producerflow.producer.v1.Producer.NIPR.ProducerRegulatoryInfo
 */
export type Producer_NIPR_ProducerRegulatoryInfo = Message<"producerflow.producer.v1.Producer.NIPR.ProducerRegulatoryInfo"> & {
  /**
   * Map of regulatory actions by state.
   * The key is the state code, and the value is the regulatory action.
   *
   * @generated from field: map<string, producerflow.producer.v1.Producer.NIPR.ProducerRegulatoryInfo.RegulatoryAction> regulatory_actions_by_state = 1;
   */
  regulatoryActionsByState: { [key: string]: Producer_NIPR_ProducerRegulatoryInfo_RegulatoryAction };

  /**
   * Clearance certification information for the producer.
   *
   * @generated from field: string clearance_certification_info = 2;
   */
  clearanceCertificationInfo: string;

  /**
   * Details about NASD/FINRA examinations taken by the producer.
   *
   * @generated from field: string nasd_exam_details = 3;
   */
  nasdExamDetails: string;
};

/**
 * Describes the message producerflow.producer.v1.Producer.NIPR.ProducerRegulatoryInfo.
 * Use `create(Producer_NIPR_ProducerRegulatoryInfoSchema)` to create a new message.
 */
export const Producer_NIPR_ProducerRegulatoryInfoSchema: GenMessage<Producer_NIPR_ProducerRegulatoryInfo> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 20, 1, 2);

/**
 * RegulatoryAction represents a regulatory action taken against a producer.
 *
 * @generated from message producerflow.producer.v1.Producer.NIPR.ProducerRegulatoryInfo.RegulatoryAction
 */
export type Producer_NIPR_ProducerRegulatoryInfo_RegulatoryAction = Message<"producerflow.producer.v1.Producer.NIPR.ProducerRegulatoryInfo.RegulatoryAction"> & {
  /**
   * Unique identifier for the regulatory action.
   *
   * @generated from field: string action_id = 1;
   */
  actionId: string;

  /**
   * The regulatory body that originated the action.
   * Typically a state insurance department or FINRA.
   *
   * @generated from field: string origin_of_action = 2;
   */
  originOfAction: string;

  /**
   * The reason why the regulatory action was taken.
   *
   * @generated from field: string reason_for_action = 3;
   */
  reasonForAction: string;

  /**
   * The outcome or resolution of the regulatory action.
   *
   * @generated from field: string disposition = 4;
   */
  disposition: string;

  /**
   * The date when the regulatory action was taken.
   *
   * @generated from field: google.protobuf.Timestamp date_of_action = 5;
   */
  dateOfAction?: Timestamp;

  /**
   * The date when the regulatory action became effective.
   *
   * @generated from field: google.protobuf.Timestamp effective_date = 6;
   */
  effectiveDate?: Timestamp;

  /**
   * The date when the producer entered into the regulatory action.
   *
   * @generated from field: google.protobuf.Timestamp enter_date = 7;
   */
  enterDate?: Timestamp;

  /**
   * Reference number for the regulatory action file.
   *
   * @generated from field: string file_ref = 8;
   */
  fileRef: string;

  /**
   * Any financial penalties associated with the regulatory action.
   *
   * @generated from field: string penalty_fine_forfeiture = 9;
   */
  penaltyFineForfeiture: string;

  /**
   * Duration of any orders associated with the regulatory action.
   *
   * @generated from field: string length_of_order = 10;
   */
  lengthOfOrder: string;
};

/**
 * Describes the message producerflow.producer.v1.Producer.NIPR.ProducerRegulatoryInfo.RegulatoryAction.
 * Use `create(Producer_NIPR_ProducerRegulatoryInfo_RegulatoryActionSchema)` to create a new message.
 */
export const Producer_NIPR_ProducerRegulatoryInfo_RegulatoryActionSchema: GenMessage<Producer_NIPR_ProducerRegulatoryInfo_RegulatoryAction> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 20, 1, 2, 0);

/**
 * Appointment represents a relationship between a producer and an insurance carrier.
 *
 * @generated from message producerflow.producer.v1.Producer.NIPR.Appointment
 */
export type Producer_NIPR_Appointment = Message<"producerflow.producer.v1.Producer.NIPR.Appointment"> & {
  /**
   * @generated from field: string branch_id = 1;
   */
  branchId: string;

  /**
   * Name of the insurance company for this appointment.
   *
   * @generated from field: string company_name = 2;
   */
  companyName: string;

  /**
   * Federal Employer Identification Number of the producer's company.
   *
   * @generated from field: string fein = 3;
   */
  fein: string;

  /**
   * Company code for the insurance carrier.
   *
   * @generated from field: string co_code = 4;
   */
  coCode: string;

  /**
   * Line of authority for this appointment (e.g., Life, Property, Casualty).
   * Indicates what types of insurance the producer can sell.
   *
   * @generated from field: string line_of_authority = 5;
   */
  lineOfAuthority: string;

  /**
   * Code for the line of authority for this appointment.
   *
   * @generated from field: string loa_code = 6;
   */
  loaCode: string;

  /**
   * Current status of the appointment (e.g., Active, Terminated).
   *
   * @generated from field: string status = 7;
   */
  status: string;

  /**
   * Reason for termination if the appointment has been terminated.
   *
   * @generated from field: string termination_reason = 8;
   */
  terminationReason: string;

  /**
   * Date associated with the current status or reason.
   *
   * @generated from field: google.protobuf.Timestamp status_reason_date = 9;
   */
  statusReasonDate?: Timestamp;

  /**
   * Date when the appointment will renew.
   *
   * @generated from field: google.protobuf.Timestamp appointment_renewal_date = 10;
   */
  appointmentRenewalDate?: Timestamp;

  /**
   * Additional affiliations or roles the producer has with the agency.
   *
   * @generated from field: string agency_affiliations = 11;
   */
  agencyAffiliations: string;
};

/**
 * Describes the message producerflow.producer.v1.Producer.NIPR.Appointment.
 * Use `create(Producer_NIPR_AppointmentSchema)` to create a new message.
 */
export const Producer_NIPR_AppointmentSchema: GenMessage<Producer_NIPR_Appointment> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 20, 1, 3);

/**
 * NewProducer represents the data needed to create a new producer in the system.
 *
 * @generated from message producerflow.producer.v1.NewProducer
 */
export type NewProducer = Message<"producerflow.producer.v1.NewProducer"> & {
  /**
   * First name of the producer.
   * Required and must be non-empty.
   *
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * Last name of the producer.
   * Required and must be non-empty.
   *
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * Middle name of the producer.
   * Optional.
   *
   * @generated from field: string middle_name = 7;
   */
  middleName: string;

  /**
   * Email address of the producer.
   * Required and must be a valid email format.
   * Must be unique within the tenant.
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * National Producer Number (NPN) of the producer.
   * Optional, but recommended for license verification.
   *
   * @generated from field: string npn = 4;
   */
  npn: string;

  /**
   * Phone number of the producer.
   * Optional if default value, but if provided must match the pattern of a valid phone number.
   *
   * @generated from field: string phone = 5;
   */
  phone: string;

  /**
   * Mailing address of the producer.
   * This is where correspondence will be sent.
   *
   * @generated from field: producerflow.producer.v1.NewProducer.Address mailing_address = 6;
   */
  mailingAddress?: NewProducer_Address;

  /**
   * External tenant identifier for the producer.
   * Used for integration with external systems.
   *
   * @generated from field: string tenant_id = 8;
   */
  tenantId: string;

  /**
   * Indicates whether the producer should be automatically approved.
   * This field is deprecated and should not be used in new code.
   *
   * @generated from field: bool auto_approve = 9 [deprecated = true];
   * @deprecated
   */
  autoApprove: boolean;
};

/**
 * Describes the message producerflow.producer.v1.NewProducer.
 * Use `create(NewProducerSchema)` to create a new message.
 */
export const NewProducerSchema: GenMessage<NewProducer> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 21);

/**
 * Address represents a mailing address for the producer.
 *
 * @generated from message producerflow.producer.v1.NewProducer.Address
 */
export type NewProducer_Address = Message<"producerflow.producer.v1.NewProducer.Address"> & {
  /**
   * Street address of the producer.
   * Required and must be non-empty.
   *
   * @generated from field: string street = 1;
   */
  street: string;

  /**
   * City of the producer.
   * Required and must be non-empty.
   *
   * @generated from field: string city = 2;
   */
  city: string;

  /**
   * State of the producer.
   * Required and must be a 2-letter state code.
   *
   * @generated from field: string state = 3;
   */
  state: string;

  /**
   * Zip code of the producer.
   * Required and must be between 1 and 10 characters.
   *
   * @generated from field: string zip = 4;
   */
  zip: string;
};

/**
 * Describes the message producerflow.producer.v1.NewProducer.Address.
 * Use `create(NewProducer_AddressSchema)` to create a new message.
 */
export const NewProducer_AddressSchema: GenMessage<NewProducer_Address> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 21, 0);

/**
 * NewProducerRequest is used to create a new producer and associate it with an agency.
 * This will trigger a call to the NIPR API to retrieve license information of the producer.
 *
 * @generated from message producerflow.producer.v1.NewProducerRequest
 */
export type NewProducerRequest = Message<"producerflow.producer.v1.NewProducerRequest"> & {
  /**
   * The UUID of the agency to associate the producer with.
   * Must be a valid UUID format.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;

  /**
   * Information about the producer to create.
   * This field is required.
   *
   * @generated from field: producerflow.producer.v1.NewProducer producer = 2;
   */
  producer?: NewProducer;
};

/**
 * Describes the message producerflow.producer.v1.NewProducerRequest.
 * Use `create(NewProducerRequestSchema)` to create a new message.
 */
export const NewProducerRequestSchema: GenMessage<NewProducerRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 22);

/**
 * NewProducerResponse contains the ID of the created producer.
 *
 * @generated from message producerflow.producer.v1.NewProducerResponse
 */
export type NewProducerResponse = Message<"producerflow.producer.v1.NewProducerResponse"> & {
  /**
   * The UUID of the created producer.
   * Must be a valid UUID format.
   *
   * @generated from field: string producer_id = 1;
   */
  producerId: string;
};

/**
 * Describes the message producerflow.producer.v1.NewProducerResponse.
 * Use `create(NewProducerResponseSchema)` to create a new message.
 */
export const NewProducerResponseSchema: GenMessage<NewProducerResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 23);

/**
 * NewProducersRequest is used to create multiple producers in a single request.
 * All producers will be associated with the specified agency.
 *
 * @generated from message producerflow.producer.v1.NewProducersRequest
 */
export type NewProducersRequest = Message<"producerflow.producer.v1.NewProducersRequest"> & {
  /**
   * The UUID of the agency to associate the producers with.
   * Must be a valid UUID format.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;

  /**
   * List of producers to create.
   * This field is required and must contain at least one producer.
   *
   * @generated from field: repeated producerflow.producer.v1.NewProducer producers = 2;
   */
  producers: NewProducer[];
};

/**
 * Describes the message producerflow.producer.v1.NewProducersRequest.
 * Use `create(NewProducersRequestSchema)` to create a new message.
 */
export const NewProducersRequestSchema: GenMessage<NewProducersRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 24);

/**
 * NewProducersResponse contains the IDs of all created producers.
 *
 * @generated from message producerflow.producer.v1.NewProducersResponse
 */
export type NewProducersResponse = Message<"producerflow.producer.v1.NewProducersResponse"> & {
  /**
   * List of UUIDs for the newly created producers.
   * The order matches the order of producers in the request.
   *
   * @generated from field: repeated string producer_ids = 1;
   */
  producerIds: string[];
};

/**
 * Describes the message producerflow.producer.v1.NewProducersResponse.
 * Use `create(NewProducersResponseSchema)` to create a new message.
 */
export const NewProducersResponseSchema: GenMessage<NewProducersResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 25);

/**
 * NewContact represents the data needed to create a new contact in the system.
 * Contacts represent non-producer individuals associated with an agency.
 *
 * @generated from message producerflow.producer.v1.NewContact
 */
export type NewContact = Message<"producerflow.producer.v1.NewContact"> & {
  /**
   * First name of the contact.
   * Required and must be non-empty.
   *
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * Last name of the contact.
   * Required and must be non-empty.
   *
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * Middle name of the contact.
   * Optional.
   *
   * @generated from field: string middle_name = 3;
   */
  middleName: string;

  /**
   * Email address of the contact.
   * Required and must be a valid email format.
   * Must be unique within the tenant.
   *
   * @generated from field: string email = 4;
   */
  email: string;

  /**
   * Phone number of the contact.
   * Optional if default value, but if provided must match the pattern of a valid phone number.
   *
   * @generated from field: string phone = 5;
   */
  phone: string;

  /**
   * Mailing address of the contact.
   *
   * @generated from field: producerflow.producer.v1.NewContact.Address address = 6;
   */
  address?: NewContact_Address;

  /**
   * Role or position of the contact within the agency.
   * Required and must be non-empty.
   *
   * @generated from field: string role = 7;
   */
  role: string;

  /**
   * External tenant identifier for the contact.
   * Used for integration with external systems.
   *
   * @generated from field: string tenant_id = 8;
   */
  tenantId: string;

  /**
   * National Producer Number (NPN) of the contact.
   *
   * @generated from field: string npn = 9;
   */
  npn: string;
};

/**
 * Describes the message producerflow.producer.v1.NewContact.
 * Use `create(NewContactSchema)` to create a new message.
 */
export const NewContactSchema: GenMessage<NewContact> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 26);

/**
 * Address represents a mailing address for the contact.
 *
 * @generated from message producerflow.producer.v1.NewContact.Address
 */
export type NewContact_Address = Message<"producerflow.producer.v1.NewContact.Address"> & {
  /**
   * Street address of the contact.
   * Required and must be non-empty.
   *
   * @generated from field: string street = 1;
   */
  street: string;

  /**
   * City of the contact.
   * Required and must be non-empty.
   *
   * @generated from field: string city = 2;
   */
  city: string;

  /**
   * State of the contact's address.
   * Required and must be exactly 2 characters (state code).
   *
   * @generated from field: string state = 3;
   */
  state: string;

  /**
   * Zip code of the contact's address.
   * Required and must be between 1 and 10 characters.
   *
   * @generated from field: string zip = 4;
   */
  zip: string;
};

/**
 * Describes the message producerflow.producer.v1.NewContact.Address.
 * Use `create(NewContact_AddressSchema)` to create a new message.
 */
export const NewContact_AddressSchema: GenMessage<NewContact_Address> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 26, 0);

/**
 * NewContactRequest is used to create a new contact and associate it with an agency.
 *
 * @generated from message producerflow.producer.v1.NewContactRequest
 */
export type NewContactRequest = Message<"producerflow.producer.v1.NewContactRequest"> & {
  /**
   * The UUID of the agency to associate the contact with.
   * Must be a valid UUID format.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;

  /**
   * Information about the contact to create.
   *
   * @generated from field: producerflow.producer.v1.NewContact contact = 2;
   */
  contact?: NewContact;
};

/**
 * Describes the message producerflow.producer.v1.NewContactRequest.
 * Use `create(NewContactRequestSchema)` to create a new message.
 */
export const NewContactRequestSchema: GenMessage<NewContactRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 27);

/**
 * NewContactResponse contains the ID of the created contact.
 *
 * @generated from message producerflow.producer.v1.NewContactResponse
 */
export type NewContactResponse = Message<"producerflow.producer.v1.NewContactResponse"> & {
  /**
   * The UUID of the created contact.
   * Must be a valid UUID format.
   *
   * @generated from field: string contact_id = 1;
   */
  contactId: string;
};

/**
 * Describes the message producerflow.producer.v1.NewContactResponse.
 * Use `create(NewContactResponseSchema)` to create a new message.
 */
export const NewContactResponseSchema: GenMessage<NewContactResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 28);

/**
 * NewContactsRequest is used to create multiple contacts in a single request.
 * All contacts will be associated with the specified agency.
 *
 * @generated from message producerflow.producer.v1.NewContactsRequest
 */
export type NewContactsRequest = Message<"producerflow.producer.v1.NewContactsRequest"> & {
  /**
   * The UUID of the agency to associate the contacts with.
   * Must be a valid UUID format.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;

  /**
   * List of contacts to create.
   * This field is required and must contain at least one contact.
   *
   * @generated from field: repeated producerflow.producer.v1.NewContact contacts = 2;
   */
  contacts: NewContact[];
};

/**
 * Describes the message producerflow.producer.v1.NewContactsRequest.
 * Use `create(NewContactsRequestSchema)` to create a new message.
 */
export const NewContactsRequestSchema: GenMessage<NewContactsRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 29);

/**
 * NewContactsResponse contains the IDs of all created contacts.
 *
 * @generated from message producerflow.producer.v1.NewContactsResponse
 */
export type NewContactsResponse = Message<"producerflow.producer.v1.NewContactsResponse"> & {
  /**
   * List of UUIDs for the newly created contacts.
   * The order matches the order of contacts in the request.
   *
   * @generated from field: repeated string contact_ids = 1;
   */
  contactIds: string[];
};

/**
 * Describes the message producerflow.producer.v1.NewContactsResponse.
 * Use `create(NewContactsResponseSchema)` to create a new message.
 */
export const NewContactsResponseSchema: GenMessage<NewContactsResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 30);

/**
 * SetExternalIDRequest is used to associate an external identifier with a producer, agency, or contact.
 * This allows integration with external systems that use different ID schemes.
 *
 * Only one entity type can be specified.
 *
 * @generated from message producerflow.producer.v1.SetExternalIDRequest
 */
export type SetExternalIDRequest = Message<"producerflow.producer.v1.SetExternalIDRequest"> & {
  /**
   * @generated from oneof producerflow.producer.v1.SetExternalIDRequest.entity_id
   */
  entityId: {
    /**
     * The UUID of the producer to set an external ID for.
     *
     * @generated from field: string producer_id = 1;
     */
    value: string;
    case: "producerId";
  } | {
    /**
     * The UUID of the agency to set an external ID for.
     *
     * @generated from field: string agency_id = 2;
     */
    value: string;
    case: "agencyId";
  } | {
    /**
     * The UUID of the contact to set an external ID for.
     *
     * @generated from field: string contact_id = 3;
     */
    value: string;
    case: "contactId";
  } | { case: undefined; value?: undefined };

  /**
   * The external tenant identifier to associate with the entity.
   * Required and must be non-empty.
   *
   * @generated from field: string tenant_id = 4;
   */
  tenantId: string;
};

/**
 * Describes the message producerflow.producer.v1.SetExternalIDRequest.
 * Use `create(SetExternalIDRequestSchema)` to create a new message.
 */
export const SetExternalIDRequestSchema: GenMessage<SetExternalIDRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 31);

/**
 * SetExternalIDResponse is the empty response returned after successfully setting an external ID.
 *
 * @generated from message producerflow.producer.v1.SetExternalIDResponse
 */
export type SetExternalIDResponse = Message<"producerflow.producer.v1.SetExternalIDResponse"> & {
};

/**
 * Describes the message producerflow.producer.v1.SetExternalIDResponse.
 * Use `create(SetExternalIDResponseSchema)` to create a new message.
 */
export const SetExternalIDResponseSchema: GenMessage<SetExternalIDResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 32);

/**
 * ValidateProducerNPNRequest is used to validate a producer's National Producer Number.
 *
 * @generated from message producerflow.producer.v1.ValidateProducerNPNRequest
 */
export type ValidateProducerNPNRequest = Message<"producerflow.producer.v1.ValidateProducerNPNRequest"> & {
  /**
   * The National Producer Number (NPN) to validate.
   * Required and must be non-empty.
   *
   * @generated from field: string npn = 1;
   */
  npn: string;

  /**
   * Optional name of the producer to validate.
   * If provided, the NPN will be validated against this name.
   *
   * @generated from field: optional string name = 2;
   */
  name?: string;
};

/**
 * Describes the message producerflow.producer.v1.ValidateProducerNPNRequest.
 * Use `create(ValidateProducerNPNRequestSchema)` to create a new message.
 */
export const ValidateProducerNPNRequestSchema: GenMessage<ValidateProducerNPNRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 33);

/**
 * ValidateProducerNPNResponse contains the result of validating a producer's NPN.
 *
 * @generated from message producerflow.producer.v1.ValidateProducerNPNResponse
 */
export type ValidateProducerNPNResponse = Message<"producerflow.producer.v1.ValidateProducerNPNResponse"> & {
  /**
   * Indicates whether the NPN is valid.
   * True if the NPN exists and is valid, false otherwise.
   *
   * @generated from field: bool valid = 1;
   */
  valid: boolean;
};

/**
 * Describes the message producerflow.producer.v1.ValidateProducerNPNResponse.
 * Use `create(ValidateProducerNPNResponseSchema)` to create a new message.
 */
export const ValidateProducerNPNResponseSchema: GenMessage<ValidateProducerNPNResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 34);

/**
 * ValidateAgencyNPNRequest is used to validate an agency's National Producer Number.
 *
 * @generated from message producerflow.producer.v1.ValidateAgencyNPNRequest
 */
export type ValidateAgencyNPNRequest = Message<"producerflow.producer.v1.ValidateAgencyNPNRequest"> & {
  /**
   * The National Producer Number (NPN) to validate.
   * Required and must be non-empty.
   *
   * @generated from field: string npn = 1;
   */
  npn: string;
};

/**
 * Describes the message producerflow.producer.v1.ValidateAgencyNPNRequest.
 * Use `create(ValidateAgencyNPNRequestSchema)` to create a new message.
 */
export const ValidateAgencyNPNRequestSchema: GenMessage<ValidateAgencyNPNRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 35);

/**
 * ValidateAgencyNPNResponse contains the result of validating an agency's NPN.
 *
 * @generated from message producerflow.producer.v1.ValidateAgencyNPNResponse
 */
export type ValidateAgencyNPNResponse = Message<"producerflow.producer.v1.ValidateAgencyNPNResponse"> & {
  /**
   * Indicates whether the NPN is valid.
   * True if the NPN exists and is valid, false otherwise.
   *
   * @generated from field: bool valid = 1;
   */
  valid: boolean;
};

/**
 * Describes the message producerflow.producer.v1.ValidateAgencyNPNResponse.
 * Use `create(ValidateAgencyNPNResponseSchema)` to create a new message.
 */
export const ValidateAgencyNPNResponseSchema: GenMessage<ValidateAgencyNPNResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 36);

/**
 * LookupNPNByFEINRequest is used to look up a producer's National Producer Number by their Federal Employer Identification Number (FEIN).
 *
 * @generated from message producerflow.producer.v1.LookupNPNByFEINRequest
 */
export type LookupNPNByFEINRequest = Message<"producerflow.producer.v1.LookupNPNByFEINRequest"> & {
  /**
   * The Federal Employer Identification Number (FEIN) to look up.
   * Required and must be exactly 9 characters.
   *
   * @generated from field: string fein = 1;
   */
  fein: string;
};

/**
 * Describes the message producerflow.producer.v1.LookupNPNByFEINRequest.
 * Use `create(LookupNPNByFEINRequestSchema)` to create a new message.
 */
export const LookupNPNByFEINRequestSchema: GenMessage<LookupNPNByFEINRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 37);

/**
 * LookupNPNByFEINResponse contains the National Producer Number (NPN) for the producer associated with the given FEIN.
 *
 * @generated from message producerflow.producer.v1.LookupNPNByFEINResponse
 */
export type LookupNPNByFEINResponse = Message<"producerflow.producer.v1.LookupNPNByFEINResponse"> & {
  /**
   * The National Producer Number (NPN) for the producer.
   *
   * @generated from field: string npn = 1;
   */
  npn: string;
};

/**
 * Describes the message producerflow.producer.v1.LookupNPNByFEINResponse.
 * Use `create(LookupNPNByFEINResponseSchema)` to create a new message.
 */
export const LookupNPNByFEINResponseSchema: GenMessage<LookupNPNByFEINResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 38);

/**
 * ResyncAgencyRequest is used to trigger a manual resynchronization of agency data.
 * This will re-fetch all data from the NIPR API for the agency and all associated producers.
 *
 * @generated from message producerflow.producer.v1.ResyncAgencyRequest
 */
export type ResyncAgencyRequest = Message<"producerflow.producer.v1.ResyncAgencyRequest"> & {
  /**
   * The UUID of the agency to resynchronize.
   * Must be a valid UUID format.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;
};

/**
 * Describes the message producerflow.producer.v1.ResyncAgencyRequest.
 * Use `create(ResyncAgencyRequestSchema)` to create a new message.
 */
export const ResyncAgencyRequestSchema: GenMessage<ResyncAgencyRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 39);

/**
 * ResyncAgencyResponse is the empty response returned after successfully triggering a resynchronization.
 *
 * @generated from message producerflow.producer.v1.ResyncAgencyResponse
 */
export type ResyncAgencyResponse = Message<"producerflow.producer.v1.ResyncAgencyResponse"> & {
};

/**
 * Describes the message producerflow.producer.v1.ResyncAgencyResponse.
 * Use `create(ResyncAgencyResponseSchema)` to create a new message.
 */
export const ResyncAgencyResponseSchema: GenMessage<ResyncAgencyResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 40);

/**
 * ResyncProducerRequest is used to trigger a manual resynchronization of producer data.
 *
 * @generated from message producerflow.producer.v1.ResyncProducerRequest
 */
export type ResyncProducerRequest = Message<"producerflow.producer.v1.ResyncProducerRequest"> & {
  /**
   * The UUID of the producer to resynchronize.
   * Must be a valid UUID format.
   *
   * @generated from field: string producer_id = 1;
   */
  producerId: string;
};

/**
 * Describes the message producerflow.producer.v1.ResyncProducerRequest.
 * Use `create(ResyncProducerRequestSchema)` to create a new message.
 */
export const ResyncProducerRequestSchema: GenMessage<ResyncProducerRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 41);

/**
 * ResyncProducerResponse is the empty response returned after successfully triggering a resynchronization.
 *
 * @generated from message producerflow.producer.v1.ResyncProducerResponse
 */
export type ResyncProducerResponse = Message<"producerflow.producer.v1.ResyncProducerResponse"> & {
};

/**
 * Describes the message producerflow.producer.v1.ResyncProducerResponse.
 * Use `create(ResyncProducerResponseSchema)` to create a new message.
 */
export const ResyncProducerResponseSchema: GenMessage<ResyncProducerResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 42);

/**
 * SyncProducerWithNIPRRequest is used to synchronize a producer's data with the NIPR API.
 *
 * @generated from message producerflow.producer.v1.SyncProducerWithNIPRRequest
 */
export type SyncProducerWithNIPRRequest = Message<"producerflow.producer.v1.SyncProducerWithNIPRRequest"> & {
  /**
   * The UUID of the producer to synchronize.
   * Must be a valid UUID format.
   *
   * @generated from field: string producer_id = 1;
   */
  producerId: string;
};

/**
 * Describes the message producerflow.producer.v1.SyncProducerWithNIPRRequest.
 * Use `create(SyncProducerWithNIPRRequestSchema)` to create a new message.
 */
export const SyncProducerWithNIPRRequestSchema: GenMessage<SyncProducerWithNIPRRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 43);

/**
 * SyncProducerWithNIPRResponse is the empty response returned after successfully synchronizing a producer's data with the NIPR API.
 *
 * @generated from message producerflow.producer.v1.SyncProducerWithNIPRResponse
 */
export type SyncProducerWithNIPRResponse = Message<"producerflow.producer.v1.SyncProducerWithNIPRResponse"> & {
};

/**
 * Describes the message producerflow.producer.v1.SyncProducerWithNIPRResponse.
 * Use `create(SyncProducerWithNIPRResponseSchema)` to create a new message.
 */
export const SyncProducerWithNIPRResponseSchema: GenMessage<SyncProducerWithNIPRResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 44);

/**
 * SyncAgencyWithNIPRRequest is used to synchronize an agency's data with the NIPR API.
 *
 * @generated from message producerflow.producer.v1.SyncAgencyWithNIPRRequest
 */
export type SyncAgencyWithNIPRRequest = Message<"producerflow.producer.v1.SyncAgencyWithNIPRRequest"> & {
  /**
   * The UUID of the agency to synchronize.
   * Must be a valid UUID format.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;

  /**
   * If true, all producers associated with the agency will be synchronized.
   * If false, only the agency will be synchronized.
   *
   * @generated from field: bool sync_all_producers = 2;
   */
  syncAllProducers: boolean;
};

/**
 * Describes the message producerflow.producer.v1.SyncAgencyWithNIPRRequest.
 * Use `create(SyncAgencyWithNIPRRequestSchema)` to create a new message.
 */
export const SyncAgencyWithNIPRRequestSchema: GenMessage<SyncAgencyWithNIPRRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 45);

/**
 * SyncAgencyWithNIPRResponse is the empty response returned after successfully synchronizing an agency's data with the NIPR API.
 *
 * @generated from message producerflow.producer.v1.SyncAgencyWithNIPRResponse
 */
export type SyncAgencyWithNIPRResponse = Message<"producerflow.producer.v1.SyncAgencyWithNIPRResponse"> & {
};

/**
 * Describes the message producerflow.producer.v1.SyncAgencyWithNIPRResponse.
 * Use `create(SyncAgencyWithNIPRResponseSchema)` to create a new message.
 */
export const SyncAgencyWithNIPRResponseSchema: GenMessage<SyncAgencyWithNIPRResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 46);

/**
 * StopSyncProducerWithNIPRRequest is used to stop synchronizing a producer's data with the NIPR API.
 *
 * @generated from message producerflow.producer.v1.StopSyncProducerWithNIPRRequest
 */
export type StopSyncProducerWithNIPRRequest = Message<"producerflow.producer.v1.StopSyncProducerWithNIPRRequest"> & {
  /**
   * The UUID of the producer to stop synchronizing.
   * Must be a valid UUID format.
   *
   * @generated from field: string producer_id = 1;
   */
  producerId: string;
};

/**
 * Describes the message producerflow.producer.v1.StopSyncProducerWithNIPRRequest.
 * Use `create(StopSyncProducerWithNIPRRequestSchema)` to create a new message.
 */
export const StopSyncProducerWithNIPRRequestSchema: GenMessage<StopSyncProducerWithNIPRRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 47);

/**
 * StopSyncProducerWithNIPRResponse is the empty response returned after successfully stopping the synchronization of a producer's data with the NIPR API.
 *
 * @generated from message producerflow.producer.v1.StopSyncProducerWithNIPRResponse
 */
export type StopSyncProducerWithNIPRResponse = Message<"producerflow.producer.v1.StopSyncProducerWithNIPRResponse"> & {
};

/**
 * Describes the message producerflow.producer.v1.StopSyncProducerWithNIPRResponse.
 * Use `create(StopSyncProducerWithNIPRResponseSchema)` to create a new message.
 */
export const StopSyncProducerWithNIPRResponseSchema: GenMessage<StopSyncProducerWithNIPRResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 48);

/**
 * StopSyncAgencyWithNIPRRequest is used to stop synchronizing an agency's data with the NIPR API.
 *
 * @generated from message producerflow.producer.v1.StopSyncAgencyWithNIPRRequest
 */
export type StopSyncAgencyWithNIPRRequest = Message<"producerflow.producer.v1.StopSyncAgencyWithNIPRRequest"> & {
  /**
   * The UUID of the agency to stop synchronizing.
   * Must be a valid UUID format.
   *
   * @generated from field: string agency_id = 1;
   */
  agencyId: string;

  /**
   * If true, all producers associated with the agency will be stopped from synchronizing.
   * If false, only the agency will be stopped from synchronizing.
   *
   * @generated from field: bool stop_all_producers = 2;
   */
  stopAllProducers: boolean;
};

/**
 * Describes the message producerflow.producer.v1.StopSyncAgencyWithNIPRRequest.
 * Use `create(StopSyncAgencyWithNIPRRequestSchema)` to create a new message.
 */
export const StopSyncAgencyWithNIPRRequestSchema: GenMessage<StopSyncAgencyWithNIPRRequest> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 49);

/**
 * StopSyncAgencyWithNIPRResponse is the empty response returned after successfully stopping the synchronization of an agency's data with the NIPR API.
 *
 * @generated from message producerflow.producer.v1.StopSyncAgencyWithNIPRResponse
 */
export type StopSyncAgencyWithNIPRResponse = Message<"producerflow.producer.v1.StopSyncAgencyWithNIPRResponse"> & {
};

/**
 * Describes the message producerflow.producer.v1.StopSyncAgencyWithNIPRResponse.
 * Use `create(StopSyncAgencyWithNIPRResponseSchema)` to create a new message.
 */
export const StopSyncAgencyWithNIPRResponseSchema: GenMessage<StopSyncAgencyWithNIPRResponse> = /*@__PURE__*/
  messageDesc(file_producerflow_producer_v1_producer, 50);

/**
 * EntityType defines the business entity type for an agency.
 *
 * @generated from enum producerflow.producer.v1.EntityType
 */
export enum EntityType {
  /**
   * Default unspecified value. Do not use.
   *
   * @generated from enum value: ENTITY_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * An individual producer operating as their own agency.
   * For this type, an agency NPN is not allowed, and additional producers are not supported.
   *
   * @generated from enum value: ENTITY_TYPE_SOLE_PROPRIETOR = 1;
   */
  SOLE_PROPRIETOR = 1,

  /**
   * A standard insurance agency that can have multiple producers.
   * For this type, either NPN or FEIN is required.
   *
   * @generated from enum value: ENTITY_TYPE_AGENCY = 2;
   */
  AGENCY = 2,

  /**
   * Ask during onboarding because the entity type is not known when the agency onboarding url is created.
   * The UI will ask the user to select the entity type.
   *
   * @generated from enum value: ENTITY_TYPE_ASK_DURING_ONBOARDING = 3;
   */
  ASK_DURING_ONBOARDING = 3,
}

/**
 * Describes the enum producerflow.producer.v1.EntityType.
 */
export const EntityTypeSchema: GenEnum<EntityType> = /*@__PURE__*/
  enumDesc(file_producerflow_producer_v1_producer, 0);

/**
 * ProducerOnboardingState defines the possible states in the producer onboarding workflow.
 * This enum is deprecated and should not be used in new code.
 *
 * @generated from enum producerflow.producer.v1.ProducerOnboardingState
 * @deprecated
 */
export enum ProducerOnboardingState {
  /**
   * @generated from enum value: PRODUCER_ONBOARDING_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The producer has been added to the agency and is awaiting approval from the tenant.
   *
   * @generated from enum value: PRODUCER_ONBOARDING_STATE_NEW = 1;
   */
  NEW = 1,

  /**
   * The producer has been approved by the tenant.
   *
   * @generated from enum value: PRODUCER_ONBOARDING_STATE_APPROVED_BY_TENANT = 2;
   */
  APPROVED_BY_TENANT = 2,

  /**
   * The producer has been rejected by the tenant.
   *
   * @generated from enum value: PRODUCER_ONBOARDING_STATE_REJECTED_BY_TENANT = 3;
   */
  REJECTED_BY_TENANT = 3,
}

/**
 * Describes the enum producerflow.producer.v1.ProducerOnboardingState.
 * @deprecated
 */
export const ProducerOnboardingStateSchema: GenEnum<ProducerOnboardingState> = /*@__PURE__*/
  enumDesc(file_producerflow_producer_v1_producer, 1);

/**
 * ProducerService provides a comprehensive API for managing insurance producers
 * and agencies, including onboarding, data synchronization, and integration with
 * external systems like NIPR for license verification.
 *
 * RPCs for starting the onboarding agency process.
 *
 * @generated from service producerflow.producer.v1.ProducerService
 */
export const ProducerService: GenService<{
  /**
   * CreateAgencyOnboardingURL generates a URL that can be used to onboard a new agency.
   * The URL contains encoded information about the agency defaults and tenant context.
   * Returns a URL string that can be shared with the agency for self-onboarding.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.CreateAgencyOnboardingURL
   */
  createAgencyOnboardingURL: {
    methodKind: "unary";
    input: typeof CreateAgencyOnboardingURLRequestSchema;
    output: typeof CreateAgencyOnboardingURLResponseSchema;
  },
  /**
   * NewAgency creates a new agency, optionally with associated producers.
   * It performs the following validation checks:
   * - Ensures all required fields are present and valid
   * - Checks whether the NPN is already registered
   * - Verifies agency and principal information with NIPR
   *
   * Business rules:
   * - Sole proprietors can't have an agency NPN or additional producers
   * - Regular agencies must provide either an NPN or a FEIN
   *
   * If validation passes, it creates the agency, principal, and any producers.
   * Returns the IDs of the created agency, principal, and producers.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.NewAgency
   */
  newAgency: {
    methodKind: "unary";
    input: typeof NewAgencyRequestSchema;
    output: typeof NewAgencyResponseSchema;
  },
  /**
   * NewProducer creates a new producer and associates them with an existing agency.
   * It validates the producer's information and checks that the email is unique.
   * Returns the ID of the created producer.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.NewProducer
   */
  newProducer: {
    methodKind: "unary";
    input: typeof NewProducerRequestSchema;
    output: typeof NewProducerResponseSchema;
  },
  /**
   * NewProducers creates multiple producers and associates them with the specified agency.
   * It performs the same validations as NewProducer for each entry.
   * Returns the IDs of all created producers.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.NewProducers
   */
  newProducers: {
    methodKind: "unary";
    input: typeof NewProducersRequestSchema;
    output: typeof NewProducersResponseSchema;
  },
  /**
   * GetAgencyAndProducers retrieves details for an agency and all associated producers.
   * Returns the agency information and a list of producers.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.GetAgencyAndProducers
   */
  getAgencyAndProducers: {
    methodKind: "unary";
    input: typeof GetAgencyAndProducersRequestSchema;
    output: typeof GetAgencyAndProducersResponseSchema;
  },
  /**
   * GetProducer retrieves detailed information about a specific producer.
   * The producer can be found by ID, NPN, or email.
   * Returns the producer's information, including NIPR data and agency association.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.GetProducer
   */
  getProducer: {
    methodKind: "unary";
    input: typeof GetProducerRequestSchema;
    output: typeof GetProducerResponseSchema;
  },
  /**
   * GetAgencyFiles returns URLs for accessing files associated with an agency, such as contracts.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.GetAgencyFiles
   */
  getAgencyFiles: {
    methodKind: "unary";
    input: typeof GetAgencyFilesRequestSchema;
    output: typeof GetAgencyFilesResponseSchema;
  },
  /**
   * UpdateProducer updates information for an existing producer.
   * Supports updating contact details, background check responses,
   * employment history, and non-uniform licensing questions.
   * Information from NIPR and other third-party sources cannot be updated.
   * Validates email uniqueness if the email is changed.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.UpdateProducer
   */
  updateProducer: {
    methodKind: "unary";
    input: typeof UpdateProducerRequestSchema;
    output: typeof UpdateProducerResponseSchema;
  },
  /**
   * ApproveProducer changes a producer's onboarding state to APPROVED.
   * This typically happens after all verification steps are complete.
   * This method is deprecated. Use SyncProducerWithNIPR instead.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.ApproveProducer
   * @deprecated
   */
  approveProducer: {
    methodKind: "unary";
    input: typeof ApproveProducerRequestSchema;
    output: typeof ApproveProducerResponseSchema;
  },
  /**
   * RejectProducer changes a producer's onboarding state to REJECTED.
   * An optional reason for rejection can be provided.
   * This method is deprecated. Use StopSyncAgencyWithNIPR instead.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.RejectProducer
   * @deprecated
   */
  rejectProducer: {
    methodKind: "unary";
    input: typeof RejectProducerRequestSchema;
    output: typeof RejectProducerResponseSchema;
  },
  /**
   * NewContact creates a new contact associated with an agency.
   * Contacts represent non-producer individuals linked to the agency.
   * Returns the ID of the created contact.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.NewContact
   */
  newContact: {
    methodKind: "unary";
    input: typeof NewContactRequestSchema;
    output: typeof NewContactResponseSchema;
  },
  /**
   * NewContacts creates multiple contacts in a single request.
   * Each contact is associated with the specified agency.
   * Returns the IDs of all created contacts.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.NewContacts
   */
  newContacts: {
    methodKind: "unary";
    input: typeof NewContactsRequestSchema;
    output: typeof NewContactsResponseSchema;
  },
  /**
   * SetExternalID sets an external identifier for a producer or contact.
   * Useful for integrating with external systems that use different ID schemes.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.SetExternalID
   */
  setExternalID: {
    methodKind: "unary";
    input: typeof SetExternalIDRequestSchema;
    output: typeof SetExternalIDResponseSchema;
  },
  /**
   * ValidateProducerNPN checks whether a producer’s National Producer Number (NPN) is valid.
   * It performs a lookup against NIPR and applies internal validation rules.
   * Returns a validity flag and any associated error messages.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.ValidateProducerNPN
   */
  validateProducerNPN: {
    methodKind: "unary";
    input: typeof ValidateProducerNPNRequestSchema;
    output: typeof ValidateProducerNPNResponseSchema;
  },
  /**
   * ValidateAgencyNPN checks whether an agency’s National Producer Number (NPN) is valid.
   * It performs a lookup against NIPR and applies internal validation rules.
   * Returns a validity flag and any associated error messages.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.ValidateAgencyNPN
   */
  validateAgencyNPN: {
    methodKind: "unary";
    input: typeof ValidateAgencyNPNRequestSchema;
    output: typeof ValidateAgencyNPNResponseSchema;
  },
  /**
   * LookupNPNByFEIN finds an NPN using a Federal Employer Identification Number.
   * Used to help agencies that know their FEIN but not their NPN.
   * Returns the NPN if found or an error message.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.LookupNPNByFEIN
   */
  lookupNPNByFEIN: {
    methodKind: "unary";
    input: typeof LookupNPNByFEINRequestSchema;
    output: typeof LookupNPNByFEINResponseSchema;
  },
  /**
   * ResyncProducer triggers a manual resynchronization of a producer’s data.
   * This can be used to refresh data after external changes.
   *
   * WARNING: This call counts as an additional NPN lookup for billing purposes.
   * Most billing plans are based on unique NPNs per month, so using this
   * method may result in extra charges.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.ResyncProducer
   */
  resyncProducer: {
    methodKind: "unary";
    input: typeof ResyncProducerRequestSchema;
    output: typeof ResyncProducerResponseSchema;
  },
  /**
   * ResyncAgency triggers a manual resynchronization of an agency’s data.
   * Similar to ResyncProducer, this can be used to refresh data after external changes.
   *
   * WARNING: This call counts as an additional NPN lookup for billing purposes.
   * Most billing plans are based on unique NPNs per month, so using this
   * method may result in extra charges.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.ResyncAgency
   */
  resyncAgency: {
    methodKind: "unary";
    input: typeof ResyncAgencyRequestSchema;
    output: typeof ResyncAgencyResponseSchema;
  },
  /**
   * SyncAgencyWithNIPR synchronizes an producer’s data with the NIPR system.
   * Fetches the latest producer information and appointments.
   *
   * WARNING: This call counts as an extra NPN lookup against your billing.
   * Most billing plans are based on unique NPNs per month, so using this
   * method may result in additional charges.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.SyncProducerWithNIPR
   */
  syncProducerWithNIPR: {
    methodKind: "unary";
    input: typeof SyncProducerWithNIPRRequestSchema;
    output: typeof SyncProducerWithNIPRResponseSchema;
  },
  /**
   * SyncAgencyWithNIPR synchronizes an agency’s data with the NIPR system.
   * Fetches the latest agency information and appointments.
   *
   * WARNING: This call counts as an extra NPN lookup against your billing.
   * Most billing plans are based on unique NPNs per month, so using this
   * method may result in additional charges.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.SyncAgencyWithNIPR
   */
  syncAgencyWithNIPR: {
    methodKind: "unary";
    input: typeof SyncAgencyWithNIPRRequestSchema;
    output: typeof SyncAgencyWithNIPRResponseSchema;
  },
  /**
   * StopSyncProducerWithNIPR stops the synchronization process with NIPR for a producer.
   * Use this to prevent further automatic updates from NIPR.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.StopSyncProducerWithNIPR
   */
  stopSyncProducerWithNIPR: {
    methodKind: "unary";
    input: typeof StopSyncProducerWithNIPRRequestSchema;
    output: typeof StopSyncProducerWithNIPRResponseSchema;
  },
  /**
   * StopSyncAgencyWithNIPR stops the synchronization process with NIPR for an agency.
   * Use this to prevent further automatic updates from NIPR.
   *
   * @generated from rpc producerflow.producer.v1.ProducerService.StopSyncAgencyWithNIPR
   */
  stopSyncAgencyWithNIPR: {
    methodKind: "unary";
    input: typeof StopSyncAgencyWithNIPRRequestSchema;
    output: typeof StopSyncAgencyWithNIPRResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_producerflow_producer_v1_producer, 0);

